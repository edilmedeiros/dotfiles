;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-link--history magit-read-file-hist erc-nick-history-list erc-server-history-list gud-gud-gdb-history compile-history gud-gdb-history transient--history markdown-gfm-language-history buffer-name-history shell-command-history magit-revision-history query-replace-history read-number-history LaTeX-environment-history reftex-cite-regexp-hist TeX-macro-history goto-line-history tmm--history Info-search-history TeX-command-history read-from-kill-ring-history eglot-command-history counsel-M-x-history counsel-ibuffer-history counsel-describe-symbol-history org-tags-history swiper-history ivy-history minibuffer-history regexp-search-ring empty-history file-name-history extended-command-history))
(setq magit-read-file-hist '(#(".gitignore" 0 10 (ivy-index 0)) #("LICENSE" 0 7 (ivy-index 1))))
(setq erc-nick-history-list '("edilmedeiros"))
(setq erc-server-history-list '("irc.libera.chat"))
(setq gud-gud-gdb-history '("gdb --fullname q_expressions"))
(setq compile-history '("gradle build" "gradle build; gradle run" "gradle build " "gradle build --info" "gradle build " "gradle build --stacktrace" "gradle build; gradle run" "gradle build" "gradle clean" "gradle build" "gradle build --scan" "gradle build" "gradle build --info" "gradle build" "./ls" "gradlew build" "./gradlew build" "cc -std=c99 -g -Wall strings.c mpc.c -ledit -lm -o strings" "cc -std=c99 -g -Wall strings mpc.c -ledit -lm -o strings" "cc -std=c99 -g -Wall conditionals.c mpc.c -ledit -lm -o conditionals" "cc -std=c99 -g -Wall functions.c mpc.c -ledit -lm -o functions" "cc -std=c99 -g -Wall variables.c mpc.c -ledit -lm -o variables" "cc -std=c99 -g -Wall q_expressions.c mpc.c -ledit -lm -o q_expressions" "cc -std=c99 -Wall q_expressions.c mpc.c -ledit -lm -o q_expressions" "cc -std=c99 -Wall s_expressions.c mpc.c -ledit -lm -o s_expressions" "cc -std=c99 -Wall error_handling.c mpc.c -ledit -lm -o error_handling" "cc -std=c99 -Wall evaluation.c mpc.c -ledit -lm -o evaluation" "cc -std=c99 -Wall parsing.c mpc.c -ledit -lm -o parsing" "cc -std=c99 -Wall parsing.c mpc.c  -ledit -lm -o parsing" "cc -std=c99 -Wall prompt.c -ledit -o prompt" "cc -std=c99 -Wall prompt.c -o prompt"))
(setq gud-gdb-history '("gdb -i=mi --args strings example.lspy" "gdb -i=mi strings example.lspy" "gdb -i=mi q_expressions" "gdb q_expressions" "gdb -i=mi q_expressions" "gdb -i=mi hello_world"))
(setq markdown-gfm-language-history '(#("haskell" 0 7 (ivy-index 0)) #("shellsession" 0 12 (ivy-index 3)) #("shell" 0 5 (ivy-index 3))))
(setq buffer-name-history '(#("Address.hs" 0 10 (ivy-index 5))))
(setq shell-command-history '("zsh"))
(setq magit-revision-history '(#("HEAD" 0 4 (ivy-index 3)) #("origin" 0 6 (ivy-index 0)) #("new-site" 0 8 (ivy-index 1)) #("main" 0 4 (ivy-index 1)) #("master" 0 6 (ivy-index 1)) #("origin/master" 0 13 (ivy-index 0))))
(setq query-replace-history '("H" #("'" 0 1 (fontified t)) "R" #("'" 0 1 (fontified t)) "feNormalize" #("normalize" 0 1 (ws-butler-chg chg face haskell-definition-face fontified t) 1 2 (ws-butler-chg delete face haskell-definition-face fontified t) 2 8 (face haskell-definition-face fontified t) 8 9 (face haskell-definition-face fontified t rear-nonsticky t)) "calc($i / $columns)" #("$i / $columns" 0 1 (ws-butler-chg delete face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 5 (fontified t) 5 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t rear-nonsticky t)) "" #("" 0 1 (fontified t)) "[^" #("[" 0 1 (fontified t)) #("[" 0 1 (fontified t)) "calc($i / $columns)" #("$i / $columns" 0 1 (fontified t face font-lock-variable-name-face ws-butler-chg delete) 1 2 (fontified t face font-lock-variable-name-face) 2 5 (fontified t) 5 12 (fontified t face font-lock-variable-name-face) 12 13 (rear-nonsticky t fontified t face font-lock-variable-name-face))))
(setq read-number-history '("52" "80"))
(setq LaTeX-environment-history '(#("figure" 0 6 (ivy-index 0 idx 1)) #("minipage" 0 8 (ivy-index 0 idx 0)) #("minifigure" 0 10 (idx 1 ivy-index 0)) #("itemize" 0 7 (ivy-index 29 idx 29)) #("align" 0 5 (ivy-index 0 idx 5)) #("table" 0 5 (ivy-index 0 idx 12))))
(setq reftex-cite-regexp-hist '(#("liberated" 0 9 (ivy-index 0)) #("cite" 0 4 (idx 0 ivy-index 0)) #("backus" 0 6 (ivy-index 0)) #("fact" 0 4 (ivy-index 0)) #("generat" 0 7 (ivy-index 0)) #("Graca2003" 0 9 (face font-lock-constant-face idx 0 ivy-index 0)) #("gener" 0 5 (ivy-index 0)) #("analog" 0 6 (ivy-index 0)) #("modeling" 0 8 (ivy-index 0)) #("ungureanu" 0 9 (ivy-index 0)) #("sifakis" 0 7 (ivy-index 0)) #("octree" 0 6 (idx 0 ivy-index 0)) #("peixoto" 0 7 (ivy-index 0)) #("map-reduce" 0 10 (ivy-index 0)) #("2008:google:map-reduce" 0 22 (ivy-index 0 idx 24 face font-lock-constant-face)) #("2021:spl:evaristo:silhouette-4d:context-selection" 0 49 (ivy-index 1 idx 42 face font-lock-constant-face)) #("2020:spl:intra:coder" 0 20 (ivy-index 0 idx 0 face font-lock-constant-face)) #("4d" 0 2 (ivy-index 0)) #("silhouette" 0 10 (ivy-index 0)) #("2020:spl:peixoto:silhouette3d" 0 29 (ivy-index 0 idx 31 face font-lock-constant-face)) #("JBIG" 0 4 (ivy-index 0 idx 7)) #("still" 0 5 (ivy-index 0)) #("lifting" 0 7 (ivy-index 0)) #("Transform" 0 9 (ivy-index 0 idx 6)) #("2016:queiroz:chou:raht" 0 22 (ivy-index 1 idx 24)) #("2015:hevc" 0 9 (ivy-index 0 idx 5)) #("2019:mpeg:gpcc" 0 14 (ivy-index 0 idx 10)) #("2019:mpeg:vpcc" 0 14 (ivy-index 1 idx 10)) #("test" 0 4 (ivy-index 0)) #("2016:ebrahimi:jpeg:pleno" 0 24 (ivy-index 1 idx 26)) #("moving" 0 6 (ivy-index 0)) #("jpeg:pleno:database" 0 19 (ivy-index 0 idx 17)) #("history" 0 7 (ivy-index 0)) #("lib" 0 3 (ivy-index 0)) #("libe" 0 4 (ivy-index 0)) #("liber" 0 5 (ivy-index 0)) #("lite" 0 4 (ivy-index 0)) #("prog" 0 4 (ivy-index 0)) #("can" 0 3 (ivy-index 0)) #("fl" 0 2 (ivy-index 0)) #("level" 0 5 (ivy-index 0)) #("revised" 0 7 (ivy-index 0)) #("syntax" 0 6 (ivy-index 0)) #("fortran" 0 7 (ivy-index 0)) #("for" 0 3 (ivy-index 0)) #("backus1954" 0 10 (ivy-index 0 idx 0 face font-lock-constant-face)) #("bac" 0 3 (ivy-index 0)) #("academic" 0 8 (ivy-index 0 idx 0))))
(setq TeX-macro-history '(#("EDIL" 0 4 (ivy-index 0)) #("emph" 0 4 (ivy-index 0)) #("hline" 0 5 (ivy-index 0)) #("cite" 0 4 (ivy-index 0)) #("quad" 0 4 (ivy-index 0)) #("linewidth" 0 9 (ivy-index 0)) #(" " 0 1 (ivy-index 2)) #("includegraphics" 0 15 (ivy-index 0)) #("ref" 0 3 (ivy-index 0)) #("hspace" 0 6 (ivy-index 0)) #("vspace" 0 6 (ivy-index 0)) #("centering" 0 9 (ivy-index 0)) #("end" 0 3 (ivy-index 0)) #("begin" 0 5 (ivy-index 0)) #("appendix" 0 8 (ivy-index 0)) #("sin" 0 3 (ivy-index 1)) #("idotsint" 0 8 (ivy-index 0)) #("dots" 0 4 (ivy-index 0)) #("sqrt" 0 4 (ivy-index 0)) #("plusminus" 0 9 (ivy-index 0)) #(")" 0 1 (ivy-index 0)) #("(" 0 1 (ivy-index 0)) #("texttimes" 0 9 (ivy-index 0)) #("alpha" 0 5 (ivy-index 0)) #("item" 0 4 (ivy-index 0)) #("lipsum" 0 6 (ivy-index 0)) #("EDUARDO" 0 7 (ivy-index 0)) #("\\" 0 1 (ivy-index 0)) #("EM" 0 2 (ivy-index 0)) #("subsectionmark" 0 14 (ivy-index 0)) #("documentclass" 0 13 (ivy-index 0)) #("vfill" 0 5 (ivy-index 0)) #("IEEEmembership" 0 14 (ivy-index 0)) #("newline" 0 7 (ivy-index 0)) #("times" 0 5 (ivy-index 0)) #("ltimes" 0 6 (ivy-index 0)) #("inclde" 0 6 (ivy-index 0)) #("operatorname" 0 12 (ivy-index 0)) #("right]" 0 6 (ivy-index 0)) #("left[" 0 5 (ivy-index 0)) #("frac{" 0 5 (ivy-index 0)) #("left" 0 4 (ivy-index 0)) #("right" 0 5 (ivy-index 0)) #("copyright" 0 9 (ivy-index 0)) #("[" 0 1 (ivy-index 0)) #("text" 0 4 (ivy-index 0)) #("]" 0 1 (ivy-index 0)) #("address" 0 7 (ivy-index 0)) #("title" 0 5 (ivy-index 0)) #("usepackage" 0 10 (ivy-index 0)) #("documentaclass" 0 14 (ivy-index 0)) #("RequirePackage" 0 14 (ivy-index 0)) #("Edil" 0 4 (ivy-index 0)) #("columnwidth" 0 11 (ivy-index 0)) #("label" 0 5 (ivy-index 0)) #("textt{" 0 6 (ivy-index 0)) #("texttt" 0 6 (ivy-index 0)) #("Delta" 0 5 (ivy-index 0)) #("midrule" 0 7 (ivy-index 0)) #("ref{tab:protocol-application}" 0 29 (ivy-index 0)) #("edil" 0 4 (ivy-index 1)) #("edil\\" 0 5 (ivy-index 0)) #("Ref" 0 3 (ivy-index 0)) #("lipsum[2-4]" 0 11 (ivy-index 0)) #("lorem " 0 6 (ivy-index 0))))
(setq goto-line-history '("5223" "733" "731" "724" "79" "77" "742"))
(setq tmm--history '("h==>Help" "p==>Projectile" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq TeX-command-history '(#("View" 0 4 (idx 0 ivy-index 0)) #("Make" 0 4 (idx 1 ivy-index 1)) #("Queue" 0 5 (idx 6 ivy-index 0))))
(setq eglot-command-history '("grammarly-languageserver --stdio" "@emacs-grammarly/unnoficial-grammarly-language-server"))
(setq counsel-M-x-history '(#("package" 0 7 (ivy-index 0)) "package-list-packages" #("link" 0 4 (ivy-index 4)) "org-insert-link" #("add-kno" 0 7 (ivy-index 0)) "projectile-add-known-project" #("vterm" 0 5 (ivy-index 0)) "vterm-other-window" "vterm-other-window" "vterm-other-window" #("vt" 0 2 (ivy-index 0)) "vterm-other-window" #("language" 0 8 (ivy-index 0)) "haskell-command-insert-language-pragma" "haskell-command-insert-language-pragma" "vterm-other-window" #("term" 0 4 (ivy-index 0)) "vterm-other-window" #("complete-symbol" 0 15 (ivy-index 0)) #("complete" 0 8 (ivy-index 5)) #("company-complete" 0 16 (ivy-index 0)) #("comp" 0 4 (ivy-index 0)) #("company" 0 7 (ivy-index 0)) #("com" 0 3 (ivy-index 0)) #("company complete" 0 16 (ivy-index 0)) #("languag" 0 7 (ivy-index 0)) #("haskell-command-insert-language-pragma" 0 38 (ivy-index 0)) #("langua" 0 6 (ivy-index 0)) #("fill" 0 4 (ivy-index 5)) "set-fill-column" "pcomplete-list" "vterm-other-window" #("comment" 0 7 (ivy-index 15)) "indent-for-comment" #("vter" 0 4 (ivy-index 0)) "vterm-other-window" #("revert" 0 6 (ivy-index 0)) "revert-buffer" "fill-paragraph" #("column" 0 6 (ivy-index 4)) "set-fill-column" "fill-paragraph" "fill-paragraph" "fill-region" "markdown-insert-link" #("known" 0 5 (ivy-index 0)) "projectile-add-known-project" "vterm-other-window" "vterm-other-window" #("erc" 0 3 (ivy-index 0)) #("format" 0 6 (ivy-index 0)) "eglot-format" #("definition" 0 10 (ivy-index 13)) "xref-find-definitions-at-mouse" "eglot-find-typeDefinition" "lsp-find-type-definition" "xref-find-definitions" "lsp-find-definition" #("package-list-packages" 0 21 (ivy-index 0)) "vterm-other-window" "revert-buffer" "revert-buffer" #("rever" 0 5 (ivy-index 0)) "revert-buffer" #("treemacs copy" 0 13 (ivy-index 0)) "treemacs-copy-file" #("treemacs refres" 0 15 (ivy-index 0)) "treemacs-refresh" "revert-buffer" "revert-buffer" #("minib" 0 5 (ivy-index 0)) "switch-to-minibuffer" #("compile pro" 0 11 (ivy-index 0)) "project-compile" #("compile" 0 7 (ivy-index 0)) #("vte" 0 3 (ivy-index 0)) "vterm-other-window" #("compil" 0 6 (ivy-index 0)) #("know" 0 4 (ivy-index 0)) "projectile-add-known-project" #("hoogle" 0 6 (ivy-index 4)) "haskell-hoogle-lookup-from-local" #("haskell" 0 7 (ivy-index 8)) "haskell-hoogle" #("info" 0 4 (ivy-index 0)) "vterm-other-window" "vterm-other-window" "vterm-other-window" "vterm-other-window" "vterm-other-window" #("cvt" 0 3 (ivy-index 0)) "iso-cvt-read-only" "vterm-other-window" "vterm-other-window" "vterm-other-window" #("duplicate" 0 9 (ivy-index 1)) "duplicate-thing" "vterm-other-window" #("lisp" 0 4 (ivy-index 1)) "lisp-mode"))
(setq counsel-ibuffer-history '(#("term" 0 4 (ivy-index 0)) " *%  *vterm*                71612 VTerm            (vterm run)" " *%  *vterm*                56745 VTerm            (vterm run)" " *%  *vterm*                11283 VTerm            (vterm run)" #("erc" 0 3 (ivy-index 3)) " *   irc.libera.chat...     54748 ERC              (erc-irc.libera.chat-6667 open)" #("ast" 0 3 (ivy-index 0)) "     AstPrinter.java         1890 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/AstPrinter.java" #("interpreter.java" 0 16 (ivy-index 0)) "     Interpreter.java        4984 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Interpreter.java" #("parser" 0 6 (ivy-index 0)) "     Parser.java             5535 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Parser.java" #("environ" 0 7 (ivy-index 0)) "     Environment.java         478 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Environment.java" "     Interpreter.java        4796 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Interpreter.java" "     Parser.java             5090 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Parser.java" #("lox" 0 3 (ivy-index 0)) " *   Lox.java                2242 Java//l          ~/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Lox.java" #("vterm" 0 5 (ivy-index 0)) " *%  *vterm*                 4784 VTerm            (vterm run)" #("instruc" 0 7 (ivy-index 0)) "     Instruction.hs          4906 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Instruction.hs" " *%  *vterm*               142344 VTerm            (vterm run)" " *%  *vterm*               134098 VTerm            (vterm run)" #("instru" 0 6 (ivy-index 0)) "     Instruction.hs          4906 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Instruction.hs" #("pack" 0 4 (ivy-index 0)) "     package.yaml            1657 Fundamental      ~/2-development/haskell/dcpu16-emulator-hs/package.yaml" #("lib" 0 3 (ivy-index 0)) "     Lib.hs                   295 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Lib.hs" #("add" 0 3 (ivy-index 0)) "     Address.hs               286 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Address.hs" #("lsm" 0 3 (ivy-index 0)) "     LSMachine.hs             362 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/LSMachine.hs" #("computer" 0 8 (ivy-index 0)) "     Computer.hs             4807 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Computer.hs" "     LSMachine.hs             316 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/LSMachine.hs" #("cpu" 0 3 (ivy-index 11)) " *   DCPU16.hs               6978 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/DCPU16.hs" " *%  *vterm*                46719 VTerm            (vterm run)" " *%  *vterm*                16952 VTerm            (vterm run)" " *%  *vterm*                 3582 VTerm            (vterm run)" #("comm" 0 4 (ivy-index 0)) "     common.js               4658 JavaScript       ~/3-others/edilmedeiros.github.io/js/common.js" #("memory" 0 6 (ivy-index 0)) "     Memory.hs                602 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Memory.hs" " *%  *vterm*               119367 VTerm            (vterm run)" " *%  *vterm*               114978 VTerm            (vterm run)" #("     Computer.hs             2040 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Computer.hs" 0 109 (idx 0 ivy-index 0)) " *%  *vterm*               109645 VTerm            (vterm run)" #("compu" 0 5 (ivy-index 0)) #("lsmac" 0 5 (ivy-index 0)) "     LSMachine.hs             316 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/LSMachine.hs" " *%  *vterm*               107245 VTerm            (vterm run)" " *%  *vterm*               106012 VTerm            (vterm run)" "     Lib.hs                   239 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/Lib.hs" " *%  *vterm*                99782 VTerm            (vterm run)" #("io" 0 2 (ivy-index 1)) "     IOComputer.hs           1260 Haskell          ~/2-development/haskell/dcpu16-emulator-hs/src/IOComputer.hs" " *%  *vterm*                84198 VTerm            (vterm run)" " *%  *vterm*                73443 VTerm            (vterm run)" " *%  *vterm*                53447 VTerm            (vterm run)" " *%  *vterm*                51423 VTerm            (vterm run)" " *%  *vterm*                49443 VTerm            (vterm run)" " *%  *vterm*                14001 VTerm            (vterm run)" " *%  *vterm*                 9657 VTerm            (vterm run)" " *%  *vterm*                 5726 VTerm            (vterm run)" " *%  *vterm*                 4221 VTerm            (vterm run)" #("make" 0 4 (ivy-index 2)) "     Makefile                5411 BSDmakefile      ~/2-development/stm32/NucleF411RE-BlinkyMX/Makefile" " *   Makefile                5411 BSDmakefile      ~/2-development/stm32/NucleF411RE-BlinkyMX/Makefile" #("rs" 0 2 (ivy-index 0)) "     lib.rs                  3747 Rustic           ~/2-development/rust/assemblying_pixels/src/lib.rs" #("index" 0 5 (ivy-index 0)) "     index.js                 330 JavaScript       ~/2-development/rust/assemblying_pixels/www/index.js" "     lib.rs                   174 Rustic           ~/2-development/rust/assemblying_pixels/src/lib.rs" "  %  *Packages*            677194 Package Menu     " #("confi" 0 5 (ivy-index 0)) "     _config.yml             1092 Fundamental      ~/3-writing/edil.com.br/_config.yml" #("gali" 0 4 (ivy-index 0)) "     2023-05-27-gali...     12115 Markdown         ~/3-writing/edil.com.br/_posts/2023-05-27-galileu-foi-censurado-pelo-stf.md" "     index.html                60 HTML+            ~/3-writing/edil.com.br/index.html" #("setti" 0 5 (ivy-index 0)) "     settings.yml            5270 Fundamental      ~/3-writing/edil.com.br/_data/settings.yml" #("defa" 0 4 (ivy-index 0)) "     default.html             965 HTML+            ~/3-writing/edil.com.br/_layouts/default.html" #("def" 0 3 (ivy-index 0)) "     default.html             965 HTML+            ~/3-writing/edil.com.br/_layouts/default.html" #("foo" 0 3 (ivy-index 0)) "     footer.html              599 HTML+            ~/3-writing/edil.com.br/_includes/footer.html" #("scr" 0 3 (ivy-index 0)) "     *scratch*                  0 Lisp Interaction " #("main" 0 4 (ivy-index 0)) "     Main.hs                 1688 Haskell          ~/2-development/haskell/lambda-qoi/app/Main.hs" #("log" 0 3 (ivy-index 1)) "     test1.log           13226795 Fundamental      ~/2-development/haskell/lambda-qoi/test1.log" "     test1.log           13025529 Fundamental      ~/2-development/haskell/lambda-qoi/test1.log" #("header" 0 6 (ivy-index 0)) "     Header.hs               1673 Haskell          ~/2-development/haskell/lambda-qoi/src/Header.hs" "     Main.hs                 1693 Haskell          ~/2-development/haskell/lambda-qoi/app/Main.hs"))
(setq counsel-describe-symbol-history '(#("insert-macro" 0 12 (ivy-index 1)) "TeX-insert-macro" #("includegra" 0 10 (ivy-index 2)) "LaTeX-includegraphics-global-files" "LaTeX-includegraphics-extensions" "LaTeX-includegraphics-read-file"))
(setq swiper-history '("ob-tangle" #("q" 0 1 (ivy-index 2)) #("user." 0 5 (ivy-index 16)) "notNul" #("notNul" 0 6 (ivy-index 7)) #(" jsonNumber = f <$> notNull (spanP isDigit)" 0 1 (swiper-line-number 114 display "114 " fontified nil) 1 11 (fontified nil face haskell-definition-face) 11 12 (fontified nil) 12 13 (syntax-table (1) fontified nil face haskell-operator-face) 13 16 (fontified nil) 16 19 (syntax-table (1) fontified nil face haskell-operator-face) 19 43 (fontified nil)) "breno" #("bitcoin" 0 7 (ivy-index 4)) #(" #bitcoin 382 Bitcoin 25.1 https://bitcoincore.org/ | bitcoinwiki dot org is a PHISHING SCAM | Price chat > #bitcoin-pricetalk | Trade #bitcoin-otc | Rules https://goo.gl/SJMlSL | Most wallets sell your info and lie | Web wallets steal!" 0 1 (fontified nil display "1430 " swiper-line-number 1430) 1 9 (fontified nil) 9 10 (fontified nil face fixed-pitch display (space :align-to 25)) 10 13 (fontified nil) 13 14 (fontified nil face fixed-pitch display (space :align-to 35)) 14 236 (fontified nil)) #("execute" 0 7 (ivy-index 1)) #("statement" 0 9 (ivy-index 4)) #("visitvarstm" 0 11 (ivy-index 0)) "visitvar" #("Expr expression" 0 15 (ivy-index 2)) #("visitunar" 0 9 (ivy-index 0)) #("visitprint" 0 10 (ivy-index 0)) #("primary" 0 7 (ivy-index 1)) #("main" 0 4 (ivy-index 0)) #("interpre" 0 8 (ivy-index 2)) #("parser.par" 0 10 (ivy-index 1)) #("evaluate" 0 8 (ivy-index 2)) #("match(" 0 6 (ivy-index 11)) #("error(" 0 6 (ivy-index 0)) #("check" 0 5 (ivy-index 1)) #("greater" 0 7 (ivy-index 0)) "portuguese" #("literal" 0 7 (ivy-index 3)) #("run" 0 3 (ivy-index 4)) #("abstract" 0 8 (ivy-index 0)) #("package" 0 7 (ivy-index 5)) #(" With this auxiliary package for ~use-package~, we can instruct Emacs that a given package depends on the presence of a system tool. It will even install this tool with the system's recommended package manager." 0 1 (fontified nil display "53   " swiper-line-number 53) 1 33 (fontified nil) 33 34 (invisible t org-emphasis t font-lock-multiline t fontified nil) 34 45 (org-emphasis t font-lock-multiline t face (org-code) fontified nil) 45 46 (invisible t org-emphasis t font-lock-multiline t fontified nil) 46 148 (fontified nil) 148 210 (fontified nil)) #("lsp" 0 3 (ivy-index 4)) #(" Experimeting with eglot instead of lsp-mode" 0 1 (fontified nil display "1944 " swiper-line-number 1944) 1 44 (fontified nil)) #("lsp-java" 0 8 (ivy-index 1)) #("   lsp-java                       20230922.1154  installed             Java support for lsp-mode" 0 1 (fontified nil display "6110 " swiper-line-number 6110) 1 3 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) fontified nil) 3 11 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t) fontified nil) 11 12 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Package" fontified nil) 12 34 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Package" fontified nil display (space :align-to 33)) 34 47 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Version" fontified nil help-echo #("Version: 20230922.1154" 9 22 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 47 48 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Version" fontified nil) 48 49 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Version" fontified nil display (space :align-to 48)) 49 58 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Status" fontified nil help-echo #("Status: installed" 8 17 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 58 59 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Status" fontified nil) 59 62 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Status" fontified nil display (space :align-to 61)) 62 63 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Archive" fontified nil) 63 71 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Archive" fontified nil display (space :align-to 70)) 71 96 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) nil nil "/Users/jose.edil/.emacs.d/elpa/lsp-java-20230922.1154" ((:url . "https://github.com/emacs-lsp/lsp-java") (:keywords "languague" "tools") (:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e")) nil) tabulated-list-column-name "Description" fontified nil help-echo #("Description: Java support for lsp-mode" 13 38 (font-lock-face package-description)) font-lock-face package-description)) #("   lsp-java                       20230922.1154  available    melpa    Java support for lsp-mode" 0 1 (fontified nil display "3314 " swiper-line-number 3314) 1 3 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) fontified nil) 3 11 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t) fontified nil) 11 12 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Package" fontified nil) 12 34 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Package" fontified nil display (space :align-to 33)) 34 47 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Version" fontified nil help-echo #("Version: 20230922.1154" 9 22 (font-lock-face package-status-available)) font-lock-face package-status-available) 47 48 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Version" fontified nil) 48 49 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Version" fontified nil display (space :align-to 48)) 49 58 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Status" fontified nil help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 58 59 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Status" fontified nil) 59 62 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Status" fontified nil display (space :align-to 61)) 62 67 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Archive" fontified nil help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) font-lock-face package-status-available) 67 68 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Archive" fontified nil) 68 71 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Archive" fontified nil display (space :align-to 70)) 71 96 (tabulated-list-entry [("lsp-java" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) action package-menu-describe-package) #("20230922.1154" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Java support for lsp-mode" 0 25 (font-lock-face package-description))] tabulated-list-id #s(package-desc lsp-java (20230922 1154) "Java support for lsp-mode" ((emacs (27 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) tar "melpa" nil ((:commit . "449673da7221a30f1b1756cedcc48b9a2b52a51e") (:keywords "languague" "tools") (:url . "https://github.com/emacs-lsp/lsp-java")) nil) tabulated-list-column-name "Description" fontified nil help-echo #("Description: Java support for lsp-mode" 13 38 (font-lock-face package-description)) font-lock-face package-description)) #("EQUAL" 0 5 (ivy-index 1)) #("print" 0 5 (ivy-index 2)) #(" void mpc_ast_print(mpc_ast_t *a);" 0 1 (fontified nil display "306 " swiper-line-number 306) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 19 (face font-lock-function-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 29 (face font-lock-type-face fontified nil) 29 31 (fontified nil) 31 32 (face font-lock-variable-name-face fontified nil) 32 34 (fontified nil)) #("builtin load" 0 12 (ivy-index 2)) #(" lval* builtin_load(lenv* e, lval* a) {" 0 1 (fontified nil display "1034 " swiper-line-number 1034) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (face font-lock-function-name-face fontified nil) 17 18 (face font-lock-function-name-face fontified nil) 18 19 (face font-lock-function-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face fontified nil) 22 23 (face font-lock-type-face fontified nil) 23 24 (face font-lock-type-face fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 28 (c-type c-decl-arg-start fontified nil) 28 29 (fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (face font-lock-variable-name-face fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 39 (fontified nil)) #("lval_add" 0 8 (ivy-index 2)) #(" lval* lval_add(lval* v, lval* x) {" 0 1 (fontified nil display "425  " swiper-line-number 425) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 15 (face font-lock-function-name-face fontified nil) 15 16 (c-type c-decl-arg-start fontified nil) 16 20 (face font-lock-type-face fontified nil) 20 22 (fontified nil) 22 23 (face font-lock-variable-name-face fontified nil) 23 24 (c-type c-decl-arg-start fontified nil) 24 25 (fontified nil) 25 29 (face font-lock-type-face fontified nil) 29 31 (fontified nil) 31 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #(" lval* builtin_load(lenv* e, lval* a) {" 0 1 (fontified nil display "1034 " swiper-line-number 1034) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (face font-lock-function-name-face fontified nil) 17 18 (face font-lock-function-name-face fontified nil) 18 19 (face font-lock-function-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face fontified nil) 22 23 (face font-lock-type-face fontified nil) 23 24 (face font-lock-type-face fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 28 (c-type c-decl-arg-start fontified nil) 28 29 (fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (face font-lock-variable-name-face fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 39 (fontified nil)) #("add builtin" 0 11 (ivy-index 12)) #(" /* --- main program ---*/" 0 1 (fontified nil display "1183 " swiper-line-number 1183) 1 2 (face font-lock-comment-delimiter-face fontified nil c-is-sws t c-in-sws t) 2 4 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 4 24 (face font-lock-comment-face fontified nil c-in-sws t) 24 26 (face font-lock-comment-delimiter-face fontified nil c-in-sws t)) #("builtin print" 0 13 (ivy-index 0)) #(" lval* builtin_print(lenv* e, lval* a);" 0 1 (fontified nil display "166  " swiper-line-number 166) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (face font-lock-function-name-face fontified nil) 17 18 (face font-lock-function-name-face fontified nil) 18 19 (face font-lock-function-name-face fontified nil) 19 20 (face font-lock-function-name-face fontified nil) 20 21 (c-type c-decl-arg-start fontified nil) 21 22 (face font-lock-type-face fontified nil) 22 23 (face font-lock-type-face fontified nil) 23 24 (face font-lock-type-face fontified nil) 24 25 (face font-lock-type-face fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (face font-lock-variable-name-face fontified nil) 28 29 (c-type c-decl-arg-start fontified nil) 29 30 (fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face fontified nil) 33 34 (face font-lock-type-face fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (face font-lock-variable-name-face fontified nil) 37 38 (fontified nil) 38 39 (fontified nil)) #(" lval* builtin_load(lenv* e, lval* a) {" 0 1 (fontified nil display "1027 " swiper-line-number 1027) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (face font-lock-function-name-face fontified nil) 17 18 (face font-lock-function-name-face fontified nil) 18 19 (face font-lock-function-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face fontified nil) 22 23 (face font-lock-type-face fontified nil) 23 24 (face font-lock-type-face fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 28 (c-type c-decl-arg-start fontified nil) 28 29 (fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (face font-lock-variable-name-face fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 39 (fontified nil)) #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1150 " swiper-line-number 1150) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #("builtin gt" 0 10 (ivy-index 2)) #(" lval* builtin_gt(lenv* e, lval* a) {" 0 1 (fontified nil display "1020 " swiper-line-number 1020) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 17 (face font-lock-function-name-face fontified nil) 17 18 (c-type c-decl-arg-start fontified nil) 18 22 (face font-lock-type-face fontified nil) 22 24 (fontified nil) 24 25 (face font-lock-variable-name-face fontified nil) 25 26 (c-type c-decl-arg-start fontified nil) 26 27 (fontified nil) 27 31 (face font-lock-type-face fontified nil) 31 33 (fontified nil) 33 34 (face font-lock-variable-name-face fontified nil) 34 37 (fontified nil)) #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1109 " swiper-line-number 1109) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) "strstr(t->children[i]->tag, " #("lval read" 0 9 (ivy-index 4)) #(" lval* lval_read(mpc_ast_t* t) {" 0 1 (fontified nil display "468  " swiper-line-number 468) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 26 (face font-lock-type-face fontified nil) 26 28 (fontified nil) 28 29 (face font-lock-variable-name-face fontified nil) 29 32 (fontified nil)) #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1098 " swiper-line-number 1098) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #("lval_read" 0 9 (ivy-index 3)) #(" lval* lval_read_num(mpc_ast_t* t) {" 0 1 (fontified nil display "462  " swiper-line-number 462) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 20 (face font-lock-function-name-face fontified nil) 20 21 (c-type c-decl-arg-start fontified nil) 21 30 (face font-lock-type-face fontified nil) 30 32 (fontified nil) 32 33 (face font-lock-variable-name-face fontified nil) 33 36 (fontified nil)) "string" #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1098 " swiper-line-number 1098) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #(" lval* lval_read(mpc_ast_t* t);" 0 1 (fontified nil display "121  " swiper-line-number 121) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 26 (face font-lock-type-face fontified nil) 26 28 (fontified nil) 28 29 (face font-lock-variable-name-face fontified nil) 29 31 (fontified nil)) #(" lval* lval_read(mpc_ast_t* t) {" 0 1 (fontified nil display "465  " swiper-line-number 465) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 26 (face font-lock-type-face fontified nil) 26 28 (fontified nil) 28 29 (face font-lock-variable-name-face fontified nil) 29 32 (fontified nil)) #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1074 " swiper-line-number 1074) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #("lval_print" 0 10 (ivy-index 2)) #(" void lval_print(lval* v) {" 0 1 (fontified nil display "490  " swiper-line-number 490) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 21 (face font-lock-type-face fontified nil) 21 23 (fontified nil) 23 24 (face font-lock-variable-name-face fontified nil) 24 27 (fontified nil)) #("type name" 0 9 (ivy-index 2)) #(" char* ltype_name(int t) {" 0 1 (fontified nil display "168  " swiper-line-number 168) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 17 (face font-lock-function-name-face fontified nil) 17 18 (c-type c-decl-arg-start fontified nil) 18 21 (face font-lock-type-face fontified nil) 21 22 (fontified nil) 22 23 (face font-lock-variable-name-face fontified nil) 23 26 (fontified nil)) #("lval_eq" 0 7 (ivy-index 1)) #(" int lval_eq(lval* x, lval* y) {" 0 1 (fontified nil display "616  " swiper-line-number 616) 1 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 12 (face font-lock-function-name-face fontified nil) 12 13 (c-type c-decl-arg-start fontified nil) 13 17 (face font-lock-type-face fontified nil) 17 19 (fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 21 (c-type c-decl-arg-start fontified nil) 21 22 (fontified nil) 22 26 (face font-lock-type-face fontified nil) 26 28 (fontified nil) 28 29 (face font-lock-variable-name-face fontified nil) 29 32 (fontified nil)) #("lval_copy" 0 9 (ivy-index 3)) #(" lval* lval_copy(lval* v) {" 0 1 (fontified nil display "409  " swiper-line-number 409) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 21 (face font-lock-type-face fontified nil) 21 23 (fontified nil) 23 24 (face font-lock-variable-name-face fontified nil) 24 27 (fontified nil)) #("lval_del" 0 8 (ivy-index 2)) #(" void lval_del(lval* v) {" 0 1 (fontified nil display "273  " swiper-line-number 273) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 14 (face font-lock-function-name-face fontified nil) 14 15 (c-type c-decl-arg-start fontified nil) 15 19 (face font-lock-type-face fontified nil) 19 21 (fontified nil) 21 22 (face font-lock-variable-name-face fontified nil) 22 25 (fontified nil)) #("enum " 0 5 (ivy-index 0)) #(" typedef enum {" 0 1 (fontified nil display "62   " swiper-line-number 62) 1 8 (face font-lock-keyword-face fontified nil) 8 9 (fontified nil) 9 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 15 (c-type c-not-decl fontified nil)) #(" int main (int argc, char** argv) {" 0 1 (fontified nil display "1041 " swiper-line-number 1041) 1 2 (face font-lock-type-face c-is-sws t fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 9 (face font-lock-function-name-face fontified nil) 9 10 (fontified nil) 10 11 (c-type c-decl-arg-start fontified nil) 11 14 (face font-lock-type-face fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 21 (fontified nil) 21 25 (face font-lock-type-face fontified nil) 25 28 (fontified nil) 28 32 (face font-lock-variable-name-face fontified nil) 32 35 (fontified nil)) #("lenv_add_builtin" 0 16 (ivy-index 16)) #("builtin head" 0 12 (ivy-index 2)) #(" lval* builtin_head(lenv* e, lval* a) {" 0 1 (fontified nil display "719  " swiper-line-number 719) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 7 (fontified nil) 7 19 (face font-lock-function-name-face fontified nil) 19 20 (c-type c-decl-arg-start fontified nil) 20 24 (face font-lock-type-face fontified nil) 24 26 (fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 28 (c-type c-decl-arg-start fontified nil) 28 29 (fontified nil) 29 33 (face font-lock-type-face fontified nil) 33 35 (fontified nil) 35 36 (face font-lock-variable-name-face fontified nil) 36 39 (fontified nil)) #(" int lval_eq(lval* x, lval* y);" 0 1 (fontified nil display "136  " swiper-line-number 136) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4 5 (fontified nil) 5 6 (face font-lock-function-name-face fontified nil) 6 7 (face font-lock-function-name-face fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (c-type c-decl-arg-start fontified nil) 13 14 (face font-lock-type-face fontified nil) 14 15 (face font-lock-type-face fontified nil) 15 16 (face font-lock-type-face fontified nil) 16 17 (face font-lock-type-face fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 21 (c-type c-decl-arg-start fontified nil) 21 22 (fontified nil) 22 23 (face font-lock-type-face fontified nil) 23 24 (face font-lock-type-face fontified nil) 24 25 (face font-lock-type-face fontified nil) 25 26 (face font-lock-type-face fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (face font-lock-variable-name-face fontified nil) 29 30 (fontified nil) 30 31 (fontified nil)) #(" lval* builtin_gt(lenv* e, lval* a) {" 0 1 (fontified nil display "904 " swiper-line-number 904) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (face font-lock-function-name-face fontified nil) 17 18 (c-type c-decl-arg-start fontified nil) 18 19 (face font-lock-type-face fontified nil) 19 20 (face font-lock-type-face fontified nil) 20 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (face font-lock-variable-name-face fontified nil) 25 26 (c-type c-decl-arg-start fontified nil) 26 27 (fontified nil) 27 28 (face font-lock-type-face fontified nil) 28 29 (face font-lock-type-face fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (face font-lock-variable-name-face fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil)) #(" /* --- main program ---*/" 0 1 (fontified nil display "905 " swiper-line-number 905) 1 2 (face font-lock-comment-delimiter-face fontified nil c-is-sws t c-in-sws t) 2 4 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 4 24 (face font-lock-comment-face fontified nil c-in-sws t) 24 26 (face font-lock-comment-delimiter-face fontified nil c-in-sws t)) #(" /* --- main program ---*/" 0 1 (fontified nil display "893 " swiper-line-number 893) 1 2 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified nil) 2 4 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4 24 (face font-lock-comment-face c-in-sws t fontified nil) 24 26 (face font-lock-comment-delimiter-face c-in-sws t fontified nil)) #("lval call" 0 9 (ivy-index 1)) #(" lval* lval_call(lenv* e, lval* f, lval* a) {" 0 1 (fontified nil display "283 " swiper-line-number 283) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil) 9 10 (face font-lock-function-name-face fontified nil) 10 11 (face font-lock-function-name-face fontified nil) 11 12 (face font-lock-function-name-face fontified nil) 12 13 (face font-lock-function-name-face fontified nil) 13 14 (face font-lock-function-name-face fontified nil) 14 15 (face font-lock-function-name-face fontified nil) 15 16 (face font-lock-function-name-face fontified nil) 16 17 (c-type c-decl-arg-start fontified nil) 17 18 (face font-lock-type-face fontified nil) 18 19 (face font-lock-type-face fontified nil) 19 20 (face font-lock-type-face fontified nil) 20 21 (face font-lock-type-face fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (face font-lock-variable-name-face fontified nil) 24 25 (c-type c-decl-arg-start fontified nil) 25 26 (fontified nil) 26 27 (face font-lock-type-face fontified nil) 27 28 (face font-lock-type-face fontified nil) 28 29 (face font-lock-type-face fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (face font-lock-variable-name-face fontified nil) 33 34 (c-type c-decl-arg-start fontified nil) 34 35 (fontified nil) 35 36 (face font-lock-type-face fontified nil) 36 37 (face font-lock-type-face fontified nil) 37 38 (face font-lock-type-face fontified nil) 38 39 (face font-lock-type-face fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (face font-lock-variable-name-face fontified nil) 42 43 (fontified nil) 43 44 (fontified nil) 44 45 (fontified nil)) #("lval eval expr" 0 14 (ivy-index 2))))
(setq ivy-history '(#("origin" 0 6 (ivy-index 0)) #("emacs.d/elpa/vterm-20221102.1407" 0 32 (ivy-index 0)) #("template.org" 0 12 (ivy-index 4)) #("codex" 0 5 (ivy-index 0)) "~/1-writing/codex/" #("OverloadedStrings" 0 17 (ivy-index 0)) #("rivika" 0 6 (ivy-index 0)) "~/2-development/haskell/rivika/" #("toUpp" 0 5 (ivy-index 0)) "toUpperStr" #("toUpper" 0 7 (ivy-index 1)) "toUpperStr" #("InstanceSigs" 0 12 (ivy-index 2)) #("FlexibleInstances" 0 17 (ivy-index 1)) #("FlexibleContexts" 0 16 (ivy-index 0)) #("TypeSynonymInstances" 0 20 (ivy-index 1)) #("import" 0 6 (ivy-index 0)) "src/Import.hs" #("package.yaml" 0 12 (ivy-index 0)) #("pb" 0 2 (ivy-index 0)) "~/2-development/bitcoin/pb-haskell/" #(".hs" 0 3 (ivy-index 6)) "src/Import.hs" #("bitcoin core sources" 0 20 (ivy-index 0)) #("https://github.com/bitcoin" 0 26 (ivy-index 0)) #("Programming Bitcoin" 0 19 (ivy-index 0)) #("https://www.oreilly.com/library/view/programming-bitcoin/9781492031482/" 0 71 (ivy-index 0)) #("pb-has" 0 6 (ivy-index 0)) "~/2-development/bitcoin/pb-haskell/" #("token" 0 5 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Token.java" #("stmt.java" 0 9 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Stmt.java" #("expr" 0 4 (ivy-index 1)) "expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" "app/src/main/java/com/craftinginterpreters/lox/Expr.java" #("astprinter" 0 10 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/AstPrinter.java" #("stmt." 0 5 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Stmt.java" #("expr." 0 5 (ivy-index 1)) "app/src/main/java/com/craftinginterpreters/lox/Expr.java" #("ast" 0 3 (ivy-index 0)) "expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" #("gener" 0 5 (ivy-index 0)) "expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" #("lox.ja" 0 6 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Lox.java" #("parse" 0 5 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Parser.java" #("generate" 0 8 (ivy-index 0)) "expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" #(".java" 0 5 (ivy-index 4)) "app/src/main/java/com/craftinginterpreters/lox/Parser.java" "app/src/main/java/com/craftinginterpreters/lox/Token.java" #("lox" 0 3 (ivy-index 1)) "app/src/main/java/com/craftinginterpreters/lox/Lox.java" "app/src/main/java/com/craftinginterpreters/lox/Expr.java" #("exp" 0 3 (ivy-index 1)) "app/src/main/java/com/craftinginterpreters/lox/Expr.java" #("genera" 0 6 (ivy-index 0)) "expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" #("~/2-development/java/craftinginterpreters/" 0 42 (ivy-index 0)) #("craf" 0 4 (ivy-index 0)) "app/src/main/java/com/craftinginterpreters/lox/Expr.java" "app/src/main/java/com/craftinginterpreters/lox/Expr.java" #(".gitignore" 0 10 (ivy-index 0)) #("~/2-development/cpp/buildyourownlisp/" 0 37 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com" 0 78 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpretes/lox" 0 102 (ivy-index 2)) #("2-deve" 0 6 (ivy-index 0)) #("kova" 0 4 (ivy-index 0)) "~/2-development/haskell/genart-kovach/" #("strings" 0 7 (ivy-index 0)) "strings.c" #("condi" 0 5 (ivy-index 0)) "conditionals.c" #("func" 0 4 (ivy-index 0)) "functions.c" #("variables." 0 10 (ivy-index 0)) "variables.c" #("varia" 0 5 (ivy-index 0)) "variables.c" #("GDB Run Configuration" 0 21 (ivy-index 0)) #("q_ex" 0 4 (ivy-index 1)) "q_expressions" #("parsing.c" 0 9 (ivy-index 12)) #("q_" 0 2 (ivy-index 0)) "q_expressions.c" #("s" 0 1 (ivy-index 3)) "s_expressions.c" #("err" 0 3 (ivy-index 0)) "error_handling.c" #("eval" 0 4 (ivy-index 0)) "evaluation.c" #("bui" 0 3 (ivy-index 0)) #("mpc.c" 0 5 (ivy-index 0)) #("pars" 0 4 (ivy-index 0)) #("prompt.c" 0 8 (ivy-index 0))))
(setq minibuffer-history '("github repo" "Programming Bitcoin" "On Writing Well" "Writing to Learn" "6667" "typeapplications" "On main: merge req" "# " "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 30 journal.pdf include/1-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 22 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/1-introduction.tex" "On master: stash" "On master: " "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf journal.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 20 journal.pdf include/01-introduction.tex" "Ainda, conectar com o primeiro parágrafo da introdução." "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/00-abstract.tex" "On main: " "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 111 journal.pdf include/02-gpac.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 71 journal.pdf include/02-gpac.tex" "H" "0.45\\linewidth" "fig:gpac_rules" "asdf" "H" "0.5\\linewidth" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 12 journal.pdf include/02-gpac.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 16 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf journal.tex" "0.45\\linewidth" "th!" "0.5\\linewidth" "width=0.5\\columnwidth" "fig:lorenz" "Output of the Lorenz attractor model." "H" "1.0\\linewidth" "ht!" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 117 journal.pdf include/05-case_studies.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/04-uplifting.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 18 journal.pdf include/introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 58 journal.pdf include/gpac.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 31 journal.pdf include/introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/introduction.tex" "4-6" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 60 journal.pdf include/gpac.tex" "2" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 59 journal.pdf include/gpac.tex" "sec:sei-la" "SEI LA" "width=\\columnwidth" "fig:octree-basics" "Octree construction." "htb" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 63 journal.pdf journal.tex" "der" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 37 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 6 journal.pdf journal.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 12 journal.pdf journal.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 5 journal.pdf include/acknowledgments.tex" "sec:acknowledgements" "Acknowledgements" "width=\\columnwidth" "fig:parallelism-schemes" "Comparison between S3D-S And S3D-ST." "htb" "width=\\columnwidth" "fig:s3d-s" "S3D-Subtree algorithm" "htb" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 59 journal.pdf include/03-methodology.tex" "width=\\columnwidth" "fig:silhouette-tree" "Silhouette Tree" "htb" "width=\\columnwidth" "fig:silhouette-transform" "Silhouete Transformation" "htb" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 6 journal.pdf include/01-introduction.tex" "sec:technique-3" "Technique 3" "Tehcnique 3" "sec:technique-2" "Technique 2" "sec:technique-1" "Technique 1" "sec:related-work" "Related Work" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 1 journal.pdf include/01-introduction.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 6 journal.pdf include/01-introduction.tex" "spconf" "geometry" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 20 journal.pdf include/04-findings.tex" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g 25 journal.pdf include/04-findings.tex"))
(setq regexp-search-ring '("q" "user." "notNul" "bitcoin" "execute" "statement" "visitvarstm" "\\(Expr\\).*?\\(expression\\)" "visitunar" "visitprint" "primary" "main" "interpre" "parser.par" "evaluate" "interpre"))
(setq file-name-history '(#("/Users/jose.edil/.emacs.d/init.el" 0 33 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/src/Lib.hs" 0 64 (ivy-index 2)) #("/Users/jose.edil/1-writing/codex/books/programmingBitcoin.org" 0 61 (ivy-index 0)) #("/Users/jose.edil/1-writing/codex/books/theCathedral&TheBazaar.org" 0 65 (ivy-index 3)) #("/Users/jose.edil/1-writing/codex/books/writingToLearn.org" 0 57 (ivy-index 0)) #("/Users/jose.edil/1-writing/codex/" 0 33 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/07tictactoe/src/Lib.hs" 0 67 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/07tictactoe/app/Main.hs" 0 68 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/07tictactoe/package.yaml" 0 69 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/06writer/app/Main.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/06writer/package.yaml" 0 66 (ivy-index 6)) #("/Users/jose.edil/6-education/2023_02/haskell/06writer/src/Lib.hs" 0 64 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/06writer/file1.data" 0 64 (ivy-index 5)) #("/Users/jose.edil/6-education/2023_02/haskell/06writer/file2.data" 0 64 (ivy-index 4)) #("/Users/jose.edil/6-education/2023_02/haskell/04reader/app/Main.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/04reader/src/Lib.hs" 0 64 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/05pythagorean/app/Main.hs" 0 70 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/05pythagorean/src/pythagorean.py" 0 77 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/05pythagorean/src/Lib.hs" 0 69 (ivy-index 2)) #("/Users/jose.edil/2-development/bitcoin/pb-haskell/src/S256Field.hs" 0 66 (ivy-index 0)) #("/Users/jose.edil/2-development/bitcoin/pb-haskell/src/FiniteField.hs" 0 68 (ivy-index 0)) #("/Users/jose.edil/2-development/bitcoin/pb-haskell/" 0 50 (ivy-index 4)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/example2.json" 0 67 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/package.yaml" 0 66 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/03hangman/app/Main.hs" 0 66 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/03hangman/src/Lib.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/2-development/java/craftinginterpreters/examples/example02.lox" 0 79 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Environment.java" 0 120 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Lox.java" 0 112 (ivy-index 9)) #("/Users/jose.edil/2-development/java/craftinginterpreters/examples/example01.lox" 0 79 (ivy-index 0)) "/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Stmt.java" #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/RuntimeError.java" 0 121 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Interpreter.java" 0 120 (ivy-index 0)) #("/Users/jose.edil/.emacs.d/config/emacs-config.org" 0 49 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Parser.java" 0 115 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/AstPrinter.java" 0 119 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/stack.yaml" 0 64 (ivy-index 8)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/example.json" 0 66 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/expr-builder/" 0 70 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/expr-builder/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" 0 130 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/tool/GenerateAst.java" 0 121 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Scanner.java" 0 116 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/Token.java" 0 114 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpreters/lox/TokenType.java" 0 118 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/craftinginterpreters/App.java" 0 104 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/craftinginterpreters/lox/App.java" 0 108 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/app/src/main/java/com/craftinginterpretes/lox/App.java" 0 111 (ivy-index 0)) #("/Users/jose.edil/2-development/java/craftinginterpreters/" 0 57 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/02parser/app/Main.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/01parser/test/example01.json" 0 73 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/01parser/app/Main.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/01parser/src/Lib.hs" 0 64 (ivy-index 2)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/prelude.lspy" 0 64 (ivy-index 0)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/example.lspy" 0 64 (ivy-index 0)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/mpc.h" 0 57 (ivy-index 1)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/strings.c" 0 61 (ivy-index 0)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/conditionals.c" 0 66 (ivy-index 2)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/functions.c" 0 63 (ivy-index 0)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/variables.c" 0 63 (ivy-index 0)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/q_expressions.c" 0 67 (ivy-index 4)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/q_expressions" 0 65 (ivy-index 2)) #("/Users/jose.edil/2-development/cpp/buildyourownlisp/" 0 52 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/AulaXIII.hs" 0 68 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/e1-268H/" 0 47 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/CPU/Utils.hs" 0 74 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/examples/32-bit-add.dasm16" 0 84 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/AulaXII.hs" 0 67 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/Recursive.hs" 0 69 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/Instruction.hs" 0 76 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/LSMachine.hs" 0 74 (ivy-index 3)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/" 0 57 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/CPU.hs" 0 63 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/AulaXI.hs" 0 66 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/classes.hs" 0 67 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/AulaX.hs" 0 65 (ivy-index 2)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/Complex.hs" 0 67 (ivy-index 0)) #("/Users/jose.edil/6-education/2023_02/haskell/00tipos/src/Lib.hs" 0 63 (ivy-index 2)) #("/Users/jose.edil/3-others/edilmedeiros.github.io/_pages/other_publications.html" 0 79 (ivy-index 0)) #("/Users/jose.edil/3-others/edilmedeiros.github.io/_pages/academic_publications.md" 0 80 (ivy-index 0)) #("/Users/jose.edil/3-others/edilmedeiros.github.io/README.md" 0 58 (ivy-index 0)) #("/Users/jose.edil/3-others/edilmedeiros.github.io/.gitignore" 0 59 (ivy-index 0)) #("/Users/jose.edil/3-others/edilmedeiros.github.io/CNAME" 0 54 (ivy-index 0)) "/Users/jose.edil/3-others/edilmedeiros.github.io/_layouts/home.html" "/Users/jose.edil/3-others/edilmedeiros.github.io/_config.yml" #("/Users/jose.edil/3-others/edilmedeiros.github.io/" 0 49 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/DCPU16.hs" 0 71 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/Lib.hs" 0 68 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/Log.hs" 0 68 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/Computer.hs" 0 73 (ivy-index 1)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/STComputer.hs" 0 75 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/EmulatorMonad.hs" 0 78 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/CPU.hs" 0 68 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/src/Memory.hs" 0 71 (ivy-index 0)) #("/Users/jose.edil/.emacs.d/conm" 0 30 (ivy-index 0)) #("/Users/jose.edil/2-development/haskell/dcpu16-emulator-hs/" 0 58 (ivy-index 0)) #("/Users/jose.edil/.gdbinit" 0 25 (ivy-index 0)) #("/Users/jose.edil/2-development/stm32/NucleF411RE-BlinkyMX/.gdbinit" 0 66 (ivy-index 0)) #("/Users/jose.edil/2-development/stm32/NucleF411RE-BlinkyMX/Core/Src/main.c" 0 73 (ivy-index 2)) #("/Users/jose.edil/.oh-my-zsh/custom/00-path.zsh" 0 46 (ivy-index 4))))
(setq extended-command-history '("find-file" "tab-next" "centered-window-mode" "find-file"))
(setq evil-jumps-history 'nil)
