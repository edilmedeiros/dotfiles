(undo-tree-save-format-version . 1)
"9e54fdd141a08f869369815f1cd5f5e4c73dd701"
[nil nil nil nil (25468 7006 853464 0) 0 nil]
([nil nil ((455 . 475) (t 25468 6629 380841 159000)) nil (25468 7006 853462 0) 0 nil])
([nil nil ((475 . 495) (#("Startup performance" 0 19 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 475)) nil (25468 7006 853460 0) 0 nil])
([nil nil ((476 . 479)) nil (25468 7006 853459 0) 0 nil])
([nil nil ((479 . 492)) nil (25468 7006 853458 0) 0 nil])
([nil nil ((493 . 494) (492 . 512) (#("Startup performance" 0 19 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg face org-level-2)) . 492)) nil (25468 7006 853456 0) 0 nil])
([nil nil ((494 . 497)) nil (25468 7006 853454 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1263 . 1264) (nil fontified nil 1263 . 1264) (nil fontified nil 1254 . 1263) (nil fontified nil 1252 . 1254) (nil help-echo nil 1241 . 1252) (nil fontified nil 1241 . 1252) (nil help-echo nil 1239 . 1241) (nil fontified nil 1239 . 1241) (nil help-echo nil 1232 . 1239) (nil fontified nil 1232 . 1239) (nil help-echo nil 1229 . 1232) (nil fontified nil 1229 . 1232) (nil help-echo nil 1228 . 1229) (nil fontified nil 1228 . 1229) (nil fontified nil 1206 . 1228) (nil fontified nil 1205 . 1206) (nil fontified nil 1193 . 1205) (nil invisible t 1192 . 1193) (nil fontified nil 1192 . 1193) (nil fontified nil 1188 . 1192) (nil invisible t 1187 . 1188) (nil fontified nil 1187 . 1188) (nil fontified nil 1121 . 1187) (nil invisible t 1120 . 1121) (nil fontified nil 1120 . 1121) (nil fontified nil 1109 . 1120) (nil invisible t 1108 . 1109) (nil fontified nil 1108 . 1109) (nil fontified nil 1066 . 1108) (nil mouse-face highlight 1065 . 1066) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 1065 . 1066) (nil invisible org-link 1065 . 1066) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 1065 . 1066) (nil fontified nil 1065 . 1066) (nil mouse-face highlight 1064 . 1065) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 1064 . 1065) (nil invisible org-link 1064 . 1065) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 1064 . 1065) (nil fontified nil 1064 . 1065) (nil mouse-face highlight 1063 . 1064) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 1063 . 1064) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 1063 . 1064) (nil fontified nil 1063 . 1064) (nil mouse-face highlight 1055 . 1063) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 1055 . 1063) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 1055 . 1063) (nil fontified nil 1055 . 1063) (nil mouse-face highlight 1054 . 1055) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 1054 . 1055) (nil invisible org-link 1054 . 1055) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 1054 . 1055) (nil fontified nil 1054 . 1055) (nil mouse-face highlight 998 . 1054) (nil keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) 998 . 1054) (nil invisible org-link 998 . 1054) (nil help-echo "LINK: https://github.com/patrickt/emacs/blob/master/init.el" 998 . 1054) (nil fontified nil 998 . 1054) (nil fontified nil 847 . 998) (nil invisible t 846 . 847) (nil fontified nil 846 . 847) (nil fontified nil 821 . 846) (nil invisible t 820 . 821) (nil fontified nil 820 . 821) (nil fontified nil 806 . 820) (nil fontified nil 805 . 806) (nil fontified nil 804 . 805) (nil fontified nil 795 . 804) (nil help-echo nil 793 . 795) (nil fontified nil 793 . 795) (nil help-echo nil 792 . 793) (nil fontified nil 792 . 793) (nil help-echo nil 755 . 792) (nil fontified nil 755 . 792) (nil help-echo nil 754 . 755) (nil fontified nil 754 . 755) (nil help-echo nil 753 . 754) (nil fontified nil 753 . 754) (nil help-echo nil 750 . 753) (nil fontified nil 750 . 753) (nil help-echo nil 748 . 750) (nil fontified nil 748 . 750) (nil help-echo nil 747 . 748) (nil fontified nil 747 . 748) (nil fontified nil 725 . 747) (nil fontified nil 724 . 725) (nil fontified nil 675 . 724) (nil invisible t 674 . 675) (nil fontified nil 674 . 675) (nil fontified nil 666 . 674) (nil invisible t 665 . 666) (nil fontified nil 665 . 666) (nil fontified nil 536 . 665) (nil invisible t 535 . 536) (nil fontified nil 535 . 536) (nil fontified nil 520 . 535) (nil invisible t 519 . 520) (nil fontified nil 519 . 520) (nil fontified nil 495 . 519) (nil fontified nil 493 . 495) (493 . 1264)) nil (25468 7006 853447 0) 0 nil])
([nil nil ((1264 . 1265)) nil (25468 7006 853383 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3148 . 3149) (nil fontified nil 3148 . 3149) (nil fontified nil 3139 . 3148) (nil fontified nil 3137 . 3139) (nil help-echo nil 3104 . 3137) (nil fontified nil 3104 . 3137) (nil help-echo nil 3103 . 3104) (nil fontified nil 3103 . 3104) (nil help-echo nil 3092 . 3103) (nil fontified nil 3092 . 3103) (nil help-echo nil 3089 . 3092) (nil fontified nil 3089 . 3092) (nil help-echo nil 3088 . 3089) (nil fontified nil 3088 . 3089) (nil fontified nil 3066 . 3088) (nil fontified nil 3065 . 3066) (nil fontified nil 2900 . 3065) (nil invisible t 2899 . 2900) (nil fontified nil 2899 . 2900) (nil fontified nil 2888 . 2899) (nil invisible t 2887 . 2888) (nil fontified nil 2887 . 2888) (nil fontified nil 2855 . 2887) (nil fontified nil 2854 . 2855) (nil fontified nil 2853 . 2854) (nil fontified nil 2852 . 2853) (nil fontified nil 2843 . 2852) (nil fontified nil 2804 . 2843) (nil fontified nil 2803 . 2804) (nil help-echo nil 2798 . 2803) (nil fontified nil 2798 . 2803) (nil help-echo nil 2794 . 2798) (nil fontified nil 2794 . 2798) (nil help-echo nil 2793 . 2794) (nil fontified nil 2793 . 2794) (nil help-echo nil 2773 . 2793) (nil fontified nil 2773 . 2793) (nil help-echo nil 2772 . 2773) (nil fontified nil 2772 . 2773) (nil help-echo nil 2761 . 2772) (nil fontified nil 2761 . 2772) (nil help-echo nil 2758 . 2761) (nil fontified nil 2758 . 2761) (nil help-echo nil 2690 . 2758) (nil fontified nil 2690 . 2758) (nil help-echo nil 2687 . 2690) (nil fontified nil 2687 . 2690) (nil help-echo nil 2685 . 2687) (nil fontified nil 2685 . 2687) (nil help-echo nil 2684 . 2685) (nil fontified nil 2684 . 2685) (nil fontified nil 2662 . 2684) (nil fontified nil 2661 . 2662) (nil fontified nil 2566 . 2661) (nil invisible t 2565 . 2566) (nil fontified nil 2565 . 2566) (nil fontified nil 2560 . 2565) (nil invisible t 2559 . 2560) (nil fontified nil 2559 . 2560) (nil fontified nil 2527 . 2559) (nil invisible t 2526 . 2527) (nil fontified nil 2526 . 2527) (nil fontified nil 2520 . 2526) (nil invisible t 2519 . 2520) (nil fontified nil 2519 . 2520) (nil fontified nil 2488 . 2519) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2477 . 2486) (nil fontified nil 2437 . 2477) (nil help-echo nil 2428 . 2437) (nil fontified nil 2428 . 2437) (nil help-echo nil 2427 . 2428) (nil fontified nil 2427 . 2428) (nil help-echo nil 2418 . 2427) (nil fontified nil 2418 . 2427) (nil help-echo nil 2415 . 2418) (nil fontified nil 2415 . 2418) (nil help-echo nil 2384 . 2415) (nil fontified nil 2384 . 2415) (nil help-echo nil 2381 . 2384) (nil fontified nil 2381 . 2384) (nil help-echo nil 2352 . 2381) (nil fontified nil 2352 . 2381) (nil help-echo nil 2345 . 2352) (nil fontified nil 2345 . 2352) (nil help-echo nil 2344 . 2345) (nil fontified nil 2344 . 2345) (nil help-echo nil 2335 . 2344) (nil fontified nil 2335 . 2344) (nil help-echo nil 2332 . 2335) (nil fontified nil 2332 . 2335) (nil help-echo nil 2303 . 2332) (nil fontified nil 2303 . 2332) (nil help-echo nil 2296 . 2303) (nil fontified nil 2296 . 2303) (nil help-echo nil 2295 . 2296) (nil fontified nil 2295 . 2296) (nil help-echo nil 2286 . 2295) (nil fontified nil 2286 . 2295) (nil help-echo nil 2283 . 2286) (nil fontified nil 2283 . 2286) (nil help-echo nil 2282 . 2283) (nil fontified nil 2282 . 2283) (nil fontified nil 2260 . 2282) (nil fontified nil 2259 . 2260) (nil fontified nil 2224 . 2259) (nil fontified nil 2022 . 2224) (nil invisible t 2021 . 2022) (nil fontified nil 2021 . 2022) (nil fontified nil 2018 . 2021) (nil invisible t 2017 . 2018) (nil fontified nil 2017 . 2018) (nil fontified nil 1970 . 2017) (nil invisible t 1969 . 1970) (nil fontified nil 1969 . 1970) (nil fontified nil 1958 . 1969) (nil invisible t 1957 . 1958) (nil fontified nil 1957 . 1958) (nil fontified nil 1947 . 1957) (nil invisible t 1946 . 1947) (nil fontified nil 1946 . 1947) (nil fontified nil 1936 . 1946) (nil invisible t 1935 . 1936) (nil fontified nil 1935 . 1936) (nil fontified nil 1843 . 1935) (nil invisible t 1842 . 1843) (nil fontified nil 1842 . 1843) (nil fontified nil 1833 . 1842) (nil invisible t 1832 . 1833) (nil fontified nil 1832 . 1833) (nil fontified nil 1778 . 1832) (nil invisible t 1777 . 1778) (nil fontified nil 1777 . 1778) (nil fontified nil 1753 . 1777) (nil invisible t 1752 . 1753) (nil fontified nil 1752 . 1753) (nil fontified nil 1719 . 1752) (nil fontified nil 1718 . 1719) (nil fontified nil 1717 . 1718) (nil fontified nil 1708 . 1717) (nil fontified nil 1684 . 1708) (nil help-echo nil 1680 . 1684) (nil fontified nil 1680 . 1684) (nil help-echo nil 1677 . 1680) (nil fontified nil 1677 . 1680) (nil help-echo nil 1647 . 1677) (nil fontified nil 1647 . 1677) (nil help-echo nil 1643 . 1647) (nil fontified nil 1643 . 1647) (nil help-echo nil 1640 . 1643) (nil fontified nil 1640 . 1643) (nil help-echo nil 1639 . 1640) (nil fontified nil 1639 . 1640) (nil fontified nil 1617 . 1639) (nil fontified nil 1616 . 1617) (nil fontified nil 1613 . 1616) (nil invisible t 1612 . 1613) (nil fontified nil 1612 . 1613) (nil fontified nil 1596 . 1612) (nil invisible t 1595 . 1596) (nil fontified nil 1595 . 1596) (nil fontified nil 1467 . 1595) (nil invisible t 1466 . 1467) (nil fontified nil 1466 . 1467) (nil fontified nil 1460 . 1466) (nil invisible t 1459 . 1460) (nil fontified nil 1459 . 1460) (nil fontified nil 1443 . 1459) (nil invisible t 1442 . 1443) (nil fontified nil 1442 . 1443) (nil fontified nil 1438 . 1442) (nil invisible t 1437 . 1438) (nil fontified nil 1437 . 1438) (nil fontified nil 1265 . 1437) (1265 . 3149)) nil (25468 7006 853375 0) 0 nil])
([nil nil ((3149 . 3150)) nil (25468 7006 853330 0) 0 nil])
([nil nil ((#("
** Startup performance
Make startup faster by reducing the frequency of garbage collection and then use a hook to measure emacs startup time.
#+begin_src emacs-lisp
    ;; -*- lexical-binding: t; -*-

    ;; The default is 800 kilobytes.  Measured in bytes.
    (setq gc-cons-threshold (* 50 1000 1000))

    ;; Profile emacs startup
    (add-hook 'emacs-startup-hook
	      (lambda ()
		(message \"*** Emacs loaded in %s seconds with %d garbage collections.\"
		     (format \"%.2f seconds\"
			     (float-time
			      (time-subtract after-init-time before-init-time)))
		     gcs-done)))
#+end_src
" 0 1 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg) 1 2 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg face org-hide keymap (keymap)) 2 3 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg composition (1 1 [9675]) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg keymap (keymap) face org-level-2) 4 23 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg face org-level-2) 23 24 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg delete face org-level-2) 24 143 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 143 165 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 165 166 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 166 170 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 170 173 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 173 174 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 174 175 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 175 198 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 198 199 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 199 201 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 201 202 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 202 206 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 206 209 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 209 259 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 259 264 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 264 268 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 268 305 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 305 306 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 306 310 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 310 313 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 313 335 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 335 369 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 369 377 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("           " 0 3 (face org-indent) 3 11 (face org-indent))) 377 383 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("           " 0 3 (face org-indent) 3 11 (face org-indent))) 383 387 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("           " 0 3 (face org-indent) 3 11 (face org-indent))) 387 398 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 398 399 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 399 400 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 400 401 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 401 402 (fontified t font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 402 459 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 459 460 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 460 475 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("            " 0 3 (face org-indent) 3 12 (face org-indent))) 475 489 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("            " 0 3 (face org-indent) 3 12 (face org-indent))) 489 490 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("            " 0 3 (face org-indent) 3 12 (face org-indent))) 490 510 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("              " 0 3 (face org-indent) 3 14 (face org-indent))) 510 570 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("               " 0 3 (face org-indent) 3 15 (face org-indent))) 570 589 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("            " 0 3 (face org-indent) 3 12 (face org-indent))) 589 598 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 598 599 (fontified t face org-block-end-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)))) . -3150) (undo-tree-id9 . -599) (undo-tree-id10 . -599) (undo-tree-id11 . -599) 4787) nil (25468 7006 853328 0) 0 nil])
([nil nil ((3150 . 3168)) nil (25468 7006 853322 0) 0 nil])
([nil nil ((3168 . 3171)) nil (25468 7006 853321 0) 0 nil])
([nil nil ((3169 . 3170)) nil (25468 7006 853320 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7594 . 7595) (nil fontified nil 7594 . 7595) (nil fontified nil 7585 . 7594) (nil fontified nil 7562 . 7585) (nil help-echo nil 7558 . 7562) (nil fontified nil 7558 . 7562) (nil help-echo nil 7555 . 7558) (nil fontified nil 7555 . 7558) (nil help-echo nil 7554 . 7555) (nil fontified nil 7554 . 7555) (nil fontified nil 7532 . 7554) (nil fontified nil 7531 . 7532) (nil fontified nil 7204 . 7531) (nil fontified nil 7203 . 7204) (nil fontified nil 7202 . 7203) (nil fontified nil 7193 . 7202) (nil fontified nil 7190 . 7193) (nil help-echo nil 7189 . 7190) (nil fontified nil 7189 . 7190) (nil help-echo nil 7188 . 7189) (nil fontified nil 7188 . 7189) (nil help-echo nil 7185 . 7188) (nil fontified nil 7185 . 7188) (nil help-echo nil 7184 . 7185) (nil fontified nil 7184 . 7185) (nil help-echo nil 7183 . 7184) (nil fontified nil 7183 . 7184) (nil help-echo nil 7154 . 7183) (nil fontified nil 7154 . 7183) (nil help-echo nil 7150 . 7154) (nil fontified nil 7150 . 7154) (nil help-echo nil 7147 . 7150) (nil fontified nil 7147 . 7150) (nil help-echo nil 7146 . 7147) (nil fontified nil 7146 . 7147) (nil fontified nil 7124 . 7146) (nil fontified nil 7123 . 7124) (nil fontified nil 7062 . 7123) (nil invisible t 7061 . 7062) (nil fontified nil 7061 . 7062) (nil fontified nil 7052 . 7061) (nil invisible t 7051 . 7052) (nil fontified nil 7051 . 7052) (nil fontified nil 6974 . 7051) (nil fontified nil 6960 . 6974) (nil invisible t 6959 . 6960) (nil fontified nil 6959 . 6960) (nil fontified nil 6939 . 6959) (nil invisible t 6938 . 6939) (nil fontified nil 6938 . 6939) (nil fontified nil 6796 . 6938) (nil invisible t 6795 . 6796) (nil fontified nil 6795 . 6796) (nil fontified nil 6784 . 6795) (nil invisible t 6783 . 6784) (nil fontified nil 6783 . 6784) (nil fontified nil 6723 . 6783) (nil invisible t 6722 . 6723) (nil fontified nil 6722 . 6723) (nil fontified nil 6702 . 6722) (nil invisible t 6701 . 6702) (nil fontified nil 6701 . 6702) (nil fontified nil 6623 . 6701) (nil fontified nil 6622 . 6623) (nil fontified nil 6621 . 6622) (nil fontified nil 6612 . 6621) (nil fontified nil 6587 . 6612) (nil fontified nil 6562 . 6587) (nil fontified nil 6537 . 6562) (nil fontified nil 6536 . 6537) (nil help-echo nil 6532 . 6536) (nil fontified nil 6532 . 6536) (nil help-echo nil 6529 . 6532) (nil fontified nil 6529 . 6532) (nil help-echo nil 6528 . 6529) (nil fontified nil 6528 . 6529) (nil fontified nil 6506 . 6528) (nil fontified nil 6505 . 6506) (nil fontified nil 6260 . 6505) (nil fontified nil 6259 . 6260) (nil fontified nil 6258 . 6259) (nil fontified nil 6249 . 6258) (nil fontified nil 6205 . 6249) (nil fontified nil 6161 . 6205) (nil fontified nil 6159 . 6161) (nil help-echo nil 6152 . 6159) (nil fontified nil 6152 . 6159) (nil help-echo nil 6150 . 6152) (nil fontified nil 6150 . 6152) (nil help-echo nil 6143 . 6150) (nil fontified nil 6143 . 6150) (nil help-echo nil 6140 . 6143) (nil fontified nil 6140 . 6143) (nil help-echo nil 6139 . 6140) (nil fontified nil 6139 . 6140) (nil fontified nil 6117 . 6139) (nil fontified nil 6116 . 6117) (nil fontified nil 6053 . 6116) (nil invisible t 6052 . 6053) (nil fontified nil 6052 . 6053) (nil fontified nil 6047 . 6052) (nil invisible t 6046 . 6047) (nil fontified nil 6046 . 6047) (nil fontified nil 5940 . 6046) (nil fontified nil 5939 . 5940) (nil fontified nil 5938 . 5939) (nil fontified nil 5929 . 5938) (nil fontified nil 5911 . 5929) (nil fontified nil 5888 . 5911) (nil fontified nil 5849 . 5888) (nil fontified nil 5821 . 5849) (nil fontified nil 5820 . 5821) (nil fontified nil 5798 . 5820) (nil fontified nil 5797 . 5798) (nil fontified nil 5715 . 5797) (nil fontified nil 5714 . 5715) (nil fontified nil 5713 . 5714) (nil fontified nil 5704 . 5713) (nil fontified nil 5667 . 5704) (nil fontified nil 5633 . 5667) (nil fontified nil 5632 . 5633) (nil fontified nil 5610 . 5632) (nil fontified nil 5609 . 5610) (nil fontified nil 5592 . 5609) (nil invisible t 5591 . 5592) (nil fontified nil 5591 . 5592) (nil fontified nil 5585 . 5591) (nil invisible t 5584 . 5585) (nil fontified nil 5584 . 5585) (nil fontified nil 5485 . 5584) (nil fontified nil 5484 . 5485) (nil fontified nil 5483 . 5484) (nil fontified nil 5474 . 5483) (nil fontified nil 5451 . 5474) (nil help-echo nil 5439 . 5451) (nil fontified nil 5439 . 5451) (nil help-echo nil 5436 . 5439) (nil fontified nil 5436 . 5439) (nil help-echo nil 5402 . 5436) (nil fontified nil 5402 . 5436) (nil help-echo nil 5399 . 5402) (nil fontified nil 5399 . 5402) (nil help-echo nil 5397 . 5399) (nil fontified nil 5397 . 5399) (nil help-echo nil 5346 . 5397) (nil fontified nil 5346 . 5397) (nil help-echo nil 5343 . 5346) (nil fontified nil 5343 . 5346) (nil help-echo nil 5341 . 5343) (nil fontified nil 5341 . 5343) (nil help-echo nil 5290 . 5341) (nil fontified nil 5290 . 5341) (nil help-echo nil 5287 . 5290) (nil fontified nil 5287 . 5290) (nil help-echo nil 5285 . 5287) (nil fontified nil 5285 . 5287) (nil help-echo nil 5284 . 5285) (nil fontified nil 5284 . 5285) (nil help-echo nil 5279 . 5284) (nil fontified nil 5279 . 5284) (nil help-echo nil 5246 . 5279) (nil fontified nil 5246 . 5279) (nil help-echo nil 5204 . 5246) (nil fontified nil 5204 . 5246) (nil help-echo nil 5201 . 5204) (nil fontified nil 5201 . 5204) (nil help-echo nil 5198 . 5201) (nil fontified nil 5198 . 5201) (nil help-echo nil 5135 . 5198) (nil fontified nil 5135 . 5198) (nil help-echo nil 5093 . 5135) (nil fontified nil 5093 . 5135) (nil help-echo nil 5090 . 5093) (nil fontified nil 5090 . 5093) (nil help-echo nil 5087 . 5090) (nil fontified nil 5087 . 5090) (nil help-echo nil 5050 . 5087) (nil fontified nil 5050 . 5087) (nil help-echo nil 5000 . 5050) (nil fontified nil 5000 . 5050) (nil help-echo nil 4997 . 5000) (nil fontified nil 4997 . 5000) (nil help-echo nil 4994 . 4997) (nil fontified nil 4994 . 4997) (nil help-echo nil 4960 . 4994) (nil fontified nil 4960 . 4994) (nil help-echo nil 4917 . 4960) (nil fontified nil 4917 . 4960) (nil help-echo nil 4914 . 4917) (nil fontified nil 4914 . 4917) (nil help-echo nil 4911 . 4914) (nil fontified nil 4911 . 4914) (nil help-echo nil 4885 . 4911) (nil fontified nil 4885 . 4911) (nil help-echo nil 4860 . 4885) (nil fontified nil 4860 . 4885) (nil help-echo nil 4857 . 4860) (nil fontified nil 4857 . 4860) (nil help-echo nil 4854 . 4857) (nil fontified nil 4854 . 4857) (nil help-echo nil 4817 . 4854) (nil fontified nil 4817 . 4854) (nil help-echo nil 4768 . 4817) (nil fontified nil 4768 . 4817) (nil help-echo nil 4765 . 4768) (nil fontified nil 4765 . 4768) (nil help-echo nil 4762 . 4765) (nil fontified nil 4762 . 4765) (nil help-echo nil 4731 . 4762) (nil fontified nil 4731 . 4762) (nil help-echo nil 4696 . 4731) (nil fontified nil 4696 . 4731) (nil help-echo nil 4693 . 4696) (nil fontified nil 4693 . 4696) (nil help-echo nil 4690 . 4693) (nil fontified nil 4690 . 4693) (nil help-echo nil 4666 . 4690) (nil fontified nil 4666 . 4690) (nil help-echo nil 4664 . 4666) (nil fontified nil 4664 . 4666) (nil help-echo nil 4663 . 4664) (nil fontified nil 4663 . 4664) (nil help-echo nil 4649 . 4663) (nil fontified nil 4649 . 4663) (nil help-echo nil 4600 . 4649) (nil fontified nil 4600 . 4649) (nil help-echo nil 4597 . 4600) (nil fontified nil 4597 . 4600) (nil help-echo nil 4594 . 4597) (nil fontified nil 4594 . 4597) (nil help-echo nil 4593 . 4594) (nil fontified nil 4593 . 4594) (nil help-echo nil 4590 . 4593) (nil fontified nil 4590 . 4593) (nil help-echo nil 4562 . 4590) (nil fontified nil 4562 . 4590) (nil help-echo nil 4534 . 4562) (nil fontified nil 4534 . 4562) (nil help-echo nil 4531 . 4534) (nil fontified nil 4531 . 4534) (nil help-echo nil 4528 . 4531) (nil fontified nil 4528 . 4531) (nil help-echo nil 4476 . 4528) (nil fontified nil 4476 . 4528) (nil help-echo nil 4411 . 4476) (nil fontified nil 4411 . 4476) (nil help-echo nil 4408 . 4411) (nil fontified nil 4408 . 4411) (nil help-echo nil 4405 . 4408) (nil fontified nil 4405 . 4408) (nil help-echo nil 4375 . 4405) (nil fontified nil 4375 . 4405) (nil help-echo nil 4343 . 4375) (nil fontified nil 4343 . 4375) (nil help-echo nil 4340 . 4343) (nil fontified nil 4340 . 4343) (nil help-echo nil 4337 . 4340) (nil fontified nil 4337 . 4340) (nil help-echo nil 4314 . 4337) (nil fontified nil 4314 . 4337) (nil help-echo nil 4289 . 4314) (nil fontified nil 4289 . 4314) (nil help-echo nil 4286 . 4289) (nil fontified nil 4286 . 4289) (nil help-echo nil 4283 . 4286) (nil fontified nil 4283 . 4286) (nil help-echo nil 4249 . 4283) (nil fontified nil 4249 . 4283) (nil help-echo nil 4205 . 4249) (nil fontified nil 4205 . 4249) (nil help-echo nil 4202 . 4205) (nil fontified nil 4202 . 4205) (nil help-echo nil 4199 . 4202) (nil fontified nil 4199 . 4202) (nil help-echo nil 4198 . 4199) (nil fontified nil 4198 . 4199) (nil help-echo nil 4190 . 4198) (nil fontified nil 4190 . 4198) (nil help-echo nil 4169 . 4190) (nil fontified nil 4169 . 4190) (nil help-echo nil 4149 . 4169) (nil fontified nil 4149 . 4169) (nil help-echo nil 4146 . 4149) (nil fontified nil 4146 . 4149) (nil help-echo nil 4143 . 4146) (nil fontified nil 4143 . 4146) (nil help-echo nil 4120 . 4143) (nil fontified nil 4120 . 4143) (nil help-echo nil 4085 . 4120) (nil fontified nil 4085 . 4120) (nil help-echo nil 4082 . 4085) (nil fontified nil 4082 . 4085) (nil help-echo nil 4079 . 4082) (nil fontified nil 4079 . 4082) (nil help-echo nil 4023 . 4079) (nil fontified nil 4023 . 4079) (nil help-echo nil 4020 . 4023) (nil fontified nil 4020 . 4023) (nil help-echo nil 4017 . 4020) (nil fontified nil 4017 . 4020) (nil help-echo nil 3997 . 4017) (nil fontified nil 3997 . 4017) (nil help-echo nil 3996 . 3997) (nil fontified nil 3996 . 3997) (nil help-echo nil 3990 . 3996) (nil fontified nil 3990 . 3996) (nil help-echo nil 3989 . 3990) (nil fontified nil 3989 . 3990) (nil help-echo nil 3981 . 3989) (nil fontified nil 3981 . 3989) (nil help-echo nil 3978 . 3981) (nil fontified nil 3978 . 3981) (nil help-echo nil 3975 . 3978) (nil fontified nil 3975 . 3978) (nil help-echo nil 3951 . 3975) (nil fontified nil 3951 . 3975) (nil help-echo nil 3908 . 3951) (nil fontified nil 3908 . 3951) (nil help-echo nil 3905 . 3908) (nil fontified nil 3905 . 3908) (nil help-echo nil 3902 . 3905) (nil fontified nil 3902 . 3905) (nil help-echo nil 3881 . 3902) (nil fontified nil 3881 . 3902) (nil help-echo nil 3850 . 3881) (nil fontified nil 3850 . 3881) (nil help-echo nil 3847 . 3850) (nil fontified nil 3847 . 3850) (nil help-echo nil 3844 . 3847) (nil fontified nil 3844 . 3847) (nil help-echo nil 3815 . 3844) (nil fontified nil 3815 . 3844) (nil help-echo nil 3774 . 3815) (nil fontified nil 3774 . 3815) (nil help-echo nil 3771 . 3774) (nil fontified nil 3771 . 3774) (nil help-echo nil 3768 . 3771) (nil fontified nil 3768 . 3771) (nil help-echo nil 3746 . 3768) (nil fontified nil 3746 . 3768) (nil help-echo nil 3695 . 3746) (nil fontified nil 3695 . 3746) (nil help-echo nil 3692 . 3695) (nil fontified nil 3692 . 3695) (nil help-echo nil 3689 . 3692) (nil fontified nil 3689 . 3692) (nil help-echo nil 3648 . 3689) (nil fontified nil 3648 . 3689) (nil help-echo nil 3579 . 3648) (nil fontified nil 3579 . 3648) (nil help-echo nil 3576 . 3579) (nil fontified nil 3576 . 3579) (nil help-echo nil 3573 . 3576) (nil fontified nil 3573 . 3576) (nil help-echo nil 3543 . 3573) (nil fontified nil 3543 . 3573) (nil help-echo nil 3519 . 3543) (nil fontified nil 3519 . 3543) (nil help-echo nil 3516 . 3519) (nil fontified nil 3516 . 3519) (nil help-echo nil 3513 . 3516) (nil fontified nil 3513 . 3516) (nil help-echo nil 3480 . 3513) (nil fontified nil 3480 . 3513) (nil help-echo nil 3434 . 3480) (nil fontified nil 3434 . 3480) (nil help-echo nil 3431 . 3434) (nil fontified nil 3431 . 3434) (nil help-echo nil 3428 . 3431) (nil fontified nil 3428 . 3431) (nil help-echo nil 3397 . 3428) (nil fontified nil 3397 . 3428) (nil help-echo nil 3350 . 3397) (nil fontified nil 3350 . 3397) (nil help-echo nil 3347 . 3350) (nil fontified nil 3347 . 3350) (nil help-echo nil 3344 . 3347) (nil fontified nil 3344 . 3347) (nil help-echo nil 3316 . 3344) (nil fontified nil 3316 . 3344) (nil help-echo nil 3287 . 3316) (nil fontified nil 3287 . 3316) (nil help-echo nil 3284 . 3287) (nil fontified nil 3284 . 3287) (nil help-echo nil 3281 . 3284) (nil fontified nil 3281 . 3284) (nil help-echo nil 3280 . 3281) (nil fontified nil 3280 . 3281) (nil help-echo nil 3276 . 3280) (nil fontified nil 3276 . 3280) (nil help-echo nil 3273 . 3276) (nil fontified nil 3273 . 3276) (nil help-echo nil 3272 . 3273) (nil fontified nil 3272 . 3273) (nil fontified nil 3250 . 3272) (nil fontified nil 3249 . 3250) (nil fontified nil 3170 . 3249) (3170 . 7595)) nil (25468 7006 853303 0) 0 nil])
([nil nil ((7595 . 7596)) nil (25468 7006 853204 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 8869 . 8870) (nil fontified nil 8869 . 8870) (nil fontified nil 8860 . 8869) (nil fontified nil 8816 . 8860) (nil help-echo nil 8801 . 8816) (nil fontified nil 8801 . 8816) (nil help-echo nil 8798 . 8801) (nil fontified nil 8798 . 8801) (nil help-echo nil 8797 . 8798) (nil fontified nil 8797 . 8798) (nil help-echo nil 8788 . 8797) (nil fontified nil 8788 . 8797) (nil help-echo nil 8748 . 8788) (nil fontified nil 8748 . 8788) (nil help-echo nil 8732 . 8748) (nil fontified nil 8732 . 8748) (nil help-echo nil 8729 . 8732) (nil fontified nil 8729 . 8732) (nil help-echo nil 8728 . 8729) (nil fontified nil 8728 . 8729) (nil help-echo nil 8723 . 8728) (nil fontified nil 8723 . 8728) (nil help-echo nil 8683 . 8723) (nil fontified nil 8683 . 8723) (nil help-echo nil 8663 . 8683) (nil fontified nil 8663 . 8683) (nil help-echo nil 8660 . 8663) (nil fontified nil 8660 . 8663) (nil help-echo nil 8659 . 8660) (nil fontified nil 8659 . 8660) (nil help-echo nil 8654 . 8659) (nil fontified nil 8654 . 8659) (nil help-echo nil 8623 . 8654) (nil fontified nil 8623 . 8654) (nil help-echo nil 8614 . 8623) (nil fontified nil 8614 . 8623) (nil help-echo nil 8603 . 8614) (nil fontified nil 8603 . 8614) (nil help-echo nil 8600 . 8603) (nil fontified nil 8600 . 8603) (nil help-echo nil 8599 . 8600) (nil fontified nil 8599 . 8600) (nil help-echo nil 8594 . 8599) (nil fontified nil 8594 . 8599) (nil help-echo nil 8554 . 8594) (nil fontified nil 8554 . 8594) (nil help-echo nil 8548 . 8554) (nil fontified nil 8548 . 8554) (nil help-echo nil 8545 . 8548) (nil fontified nil 8545 . 8548) (nil help-echo nil 8544 . 8545) (nil fontified nil 8544 . 8545) (nil help-echo nil 8530 . 8544) (nil fontified nil 8530 . 8544) (nil help-echo nil 8490 . 8530) (nil fontified nil 8490 . 8530) (nil help-echo nil 8472 . 8490) (nil fontified nil 8472 . 8490) (nil help-echo nil 8469 . 8472) (nil fontified nil 8469 . 8472) (nil help-echo nil 8468 . 8469) (nil fontified nil 8468 . 8469) (nil help-echo nil 8452 . 8468) (nil fontified nil 8452 . 8468) (nil help-echo nil 8412 . 8452) (nil fontified nil 8412 . 8452) (nil help-echo nil 8381 . 8412) (nil fontified nil 8381 . 8412) (nil help-echo nil 8378 . 8381) (nil fontified nil 8378 . 8381) (nil help-echo nil 8377 . 8378) (nil fontified nil 8377 . 8378) (nil help-echo nil 8366 . 8377) (nil fontified nil 8366 . 8377) (nil help-echo nil 8326 . 8366) (nil fontified nil 8326 . 8366) (nil help-echo nil 8320 . 8326) (nil fontified nil 8320 . 8326) (nil help-echo nil 8317 . 8320) (nil fontified nil 8317 . 8320) (nil help-echo nil 8316 . 8317) (nil fontified nil 8316 . 8317) (nil help-echo nil 8307 . 8316) (nil fontified nil 8307 . 8316) (nil help-echo nil 8267 . 8307) (nil fontified nil 8267 . 8307) (nil help-echo nil 8253 . 8267) (nil fontified nil 8253 . 8267) (nil help-echo nil 8250 . 8253) (nil fontified nil 8250 . 8253) (nil help-echo nil 8249 . 8250) (nil fontified nil 8249 . 8250) (nil help-echo nil 8244 . 8249) (nil fontified nil 8244 . 8249) (nil help-echo nil 8204 . 8244) (nil fontified nil 8204 . 8244) (nil help-echo nil 8189 . 8204) (nil fontified nil 8189 . 8204) (nil help-echo nil 8186 . 8189) (nil fontified nil 8186 . 8189) (nil help-echo nil 8185 . 8186) (nil fontified nil 8185 . 8186) (nil help-echo nil 8176 . 8185) (nil fontified nil 8176 . 8185) (nil help-echo nil 8136 . 8176) (nil fontified nil 8136 . 8176) (nil help-echo nil 8116 . 8136) (nil fontified nil 8116 . 8136) (nil help-echo nil 8113 . 8116) (nil fontified nil 8113 . 8116) (nil help-echo nil 8112 . 8113) (nil fontified nil 8112 . 8113) (nil help-echo nil 8103 . 8112) (nil fontified nil 8103 . 8112) (nil help-echo nil 8096 . 8103) (nil fontified nil 8096 . 8103) (nil help-echo nil 8086 . 8096) (nil fontified nil 8086 . 8096) (nil help-echo nil 8080 . 8086) (nil fontified nil 8080 . 8086) (nil help-echo nil 8074 . 8080) (nil fontified nil 8074 . 8080) (nil help-echo nil 8063 . 8074) (nil fontified nil 8063 . 8074) (nil help-echo nil 8062 . 8063) (nil fontified nil 8062 . 8063) (nil help-echo nil 8031 . 8062) (nil fontified nil 8031 . 8062) (nil help-echo nil 8027 . 8031) (nil fontified nil 8027 . 8031) (nil help-echo nil 8023 . 8027) (nil fontified nil 8023 . 8027) (nil help-echo nil 7998 . 8023) (nil fontified nil 7998 . 8023) (nil help-echo nil 7997 . 7998) (nil fontified nil 7997 . 7998) (nil help-echo nil 7992 . 7997) (nil fontified nil 7992 . 7997) (nil help-echo nil 7989 . 7992) (nil fontified nil 7989 . 7992) (nil help-echo nil 7988 . 7989) (nil fontified nil 7988 . 7989) (nil fontified nil 7966 . 7988) (nil fontified nil 7965 . 7966) (nil fontified nil 7951 . 7965) (nil invisible t 7950 . 7951) (nil fontified nil 7950 . 7951) (nil fontified nil 7940 . 7950) (nil invisible t 7939 . 7940) (nil fontified nil 7939 . 7940) (nil fontified nil 7752 . 7939) (nil fontified nil 7751 . 7752) (nil fontified nil 7750 . 7751) (nil fontified nil 7741 . 7750) (nil fontified nil 7711 . 7741) (nil help-echo nil 7707 . 7711) (nil fontified nil 7707 . 7711) (nil help-echo nil 7704 . 7707) (nil fontified nil 7704 . 7707) (nil help-echo nil 7703 . 7704) (nil fontified nil 7703 . 7704) (nil fontified nil 7681 . 7703) (nil fontified nil 7680 . 7681) (nil fontified nil 7596 . 7680) (7596 . 8870)) nil (25468 7006 853197 0) 0 nil])
([nil nil ((8870 . 8871)) nil (25468 7006 853155 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12156 . 12157) (nil fontified nil 12156 . 12157) (nil fontified nil 12147 . 12156) (nil fontified nil 12103 . 12147) (nil help-echo nil 12096 . 12103) (nil fontified nil 12096 . 12103) (nil help-echo nil 12092 . 12096) (nil fontified nil 12092 . 12096) (nil help-echo nil 12081 . 12092) (nil fontified nil 12081 . 12092) (nil help-echo nil 12074 . 12081) (nil fontified nil 12074 . 12081) (nil help-echo nil 12071 . 12074) (nil fontified nil 12071 . 12074) (nil help-echo nil 12065 . 12071) (nil fontified nil 12065 . 12071) (nil help-echo nil 12061 . 12065) (nil fontified nil 12061 . 12065) (nil help-echo nil 12060 . 12061) (nil fontified nil 12060 . 12061) (nil help-echo nil 12051 . 12060) (nil fontified nil 12051 . 12060) (nil help-echo nil 12047 . 12051) (nil fontified nil 12047 . 12051) (nil help-echo nil 12046 . 12047) (nil fontified nil 12046 . 12047) (nil help-echo nil 12041 . 12046) (nil fontified nil 12041 . 12046) (nil help-echo nil 12040 . 12041) (nil fontified nil 12040 . 12041) (nil help-echo nil 12029 . 12040) (nil fontified nil 12029 . 12040) (nil help-echo nil 12026 . 12029) (nil fontified nil 12026 . 12029) (nil help-echo nil 12025 . 12026) (nil fontified nil 12025 . 12026) (nil fontified nil 12003 . 12025) (nil fontified nil 12002 . 12003) (nil fontified nil 11974 . 12002) (nil invisible t 11973 . 11974) (nil fontified nil 11973 . 11974) (nil fontified nil 11968 . 11973) (nil invisible t 11967 . 11968) (nil fontified nil 11967 . 11968) (nil fontified nil 11913 . 11967) (nil invisible t 11912 . 11913) (nil fontified nil 11912 . 11913) (nil fontified nil 11898 . 11912) (nil invisible t 11897 . 11898) (nil fontified nil 11897 . 11898) (nil fontified nil 11893 . 11897) (nil fontified nil 11833 . 11893) (nil fontified nil 11832 . 11833) (nil fontified nil 11831 . 11832) (nil fontified nil 11822 . 11831) (nil fontified nil 11812 . 11822) (nil help-echo nil 11796 . 11812) (nil fontified nil 11796 . 11812) (nil help-echo nil 11794 . 11796) (nil fontified nil 11794 . 11796) (nil help-echo nil 11786 . 11794) (nil fontified nil 11786 . 11794) (nil help-echo nil 11783 . 11786) (nil fontified nil 11783 . 11786) (nil help-echo nil 11773 . 11783) (nil fontified nil 11773 . 11783) (nil help-echo nil 11753 . 11773) (nil fontified nil 11753 . 11773) (nil help-echo nil 11751 . 11753) (nil fontified nil 11751 . 11753) (nil help-echo nil 11743 . 11751) (nil fontified nil 11743 . 11751) (nil help-echo nil 11740 . 11743) (nil fontified nil 11740 . 11743) (nil help-echo nil 11730 . 11740) (nil fontified nil 11730 . 11740) (nil help-echo nil 11715 . 11730) (nil fontified nil 11715 . 11730) (nil help-echo nil 11713 . 11715) (nil fontified nil 11713 . 11715) (nil help-echo nil 11705 . 11713) (nil fontified nil 11705 . 11713) (nil help-echo nil 11702 . 11705) (nil fontified nil 11702 . 11705) (nil help-echo nil 11701 . 11702) (nil fontified nil 11701 . 11702) (nil fontified nil 11679 . 11701) (nil fontified nil 11678 . 11679) (nil fontified nil 11449 . 11678) (nil fontified nil 11448 . 11449) (nil fontified nil 11447 . 11448) (nil fontified nil 11438 . 11447) (nil fontified nil 11402 . 11438) (nil fontified nil 11401 . 11402) (nil help-echo nil 11394 . 11401) (nil fontified nil 11394 . 11401) (nil help-echo nil 11390 . 11394) (nil fontified nil 11390 . 11394) (nil help-echo nil 11389 . 11390) (nil fontified nil 11389 . 11390) (nil help-echo nil 11369 . 11389) (nil fontified nil 11369 . 11389) (nil help-echo nil 11368 . 11369) (nil fontified nil 11368 . 11369) (nil help-echo nil 11357 . 11368) (nil fontified nil 11357 . 11368) (nil help-echo nil 11354 . 11357) (nil fontified nil 11354 . 11357) (nil help-echo nil 11353 . 11354) (nil fontified nil 11353 . 11354) (nil fontified nil 11331 . 11353) (nil fontified nil 11330 . 11331) (nil fontified nil 11329 . 11330) (nil fontified nil 11320 . 11329) (nil fontified nil 11302 . 11320) (nil fontified nil 11295 . 11302) (nil fontified nil 11283 . 11295) (nil fontified nil 11282 . 11283) (nil fontified nil 11173 . 11282) (nil fontified nil 11055 . 11173) (nil fontified nil 11054 . 11055) (nil fontified nil 11053 . 11054) (nil fontified nil 11044 . 11053) (nil fontified nil 11018 . 11044) (nil help-echo nil 11011 . 11018) (nil fontified nil 11011 . 11018) (nil help-echo nil 11010 . 11011) (nil fontified nil 11010 . 11011) (nil help-echo nil 11002 . 11010) (nil fontified nil 11002 . 11010) (nil help-echo nil 10999 . 11002) (nil fontified nil 10999 . 11002) (nil help-echo nil 10998 . 10999) (nil fontified nil 10998 . 10999) (nil help-echo nil 10975 . 10998) (nil fontified nil 10975 . 10998) (nil help-echo nil 10923 . 10975) (nil fontified nil 10923 . 10975) (nil help-echo nil 10893 . 10923) (nil fontified nil 10893 . 10923) (nil help-echo nil 10891 . 10893) (nil fontified nil 10891 . 10893) (nil help-echo nil 10880 . 10891) (nil fontified nil 10880 . 10891) (nil help-echo nil 10875 . 10880) (nil fontified nil 10875 . 10880) (nil help-echo nil 10874 . 10875) (nil fontified nil 10874 . 10875) (nil help-echo nil 10823 . 10874) (nil fontified nil 10823 . 10874) (nil help-echo nil 10819 . 10823) (nil fontified nil 10819 . 10823) (nil help-echo nil 10815 . 10819) (nil fontified nil 10815 . 10819) (nil help-echo nil 10794 . 10815) (nil fontified nil 10794 . 10815) (nil help-echo nil 10793 . 10794) (nil fontified nil 10793 . 10794) (nil help-echo nil 10788 . 10793) (nil fontified nil 10788 . 10793) (nil help-echo nil 10785 . 10788) (nil fontified nil 10785 . 10788) (nil help-echo nil 10784 . 10785) (nil fontified nil 10784 . 10785) (nil help-echo nil 10764 . 10784) (nil fontified nil 10764 . 10784) (nil help-echo nil 10757 . 10764) (nil fontified nil 10757 . 10764) (nil help-echo nil 10756 . 10757) (nil fontified nil 10756 . 10757) (nil help-echo nil 10748 . 10756) (nil fontified nil 10748 . 10756) (nil help-echo nil 10745 . 10748) (nil fontified nil 10745 . 10748) (nil help-echo nil 10726 . 10745) (nil fontified nil 10726 . 10745) (nil help-echo nil 10719 . 10726) (nil fontified nil 10719 . 10726) (nil help-echo nil 10718 . 10719) (nil fontified nil 10718 . 10719) (nil help-echo nil 10710 . 10718) (nil fontified nil 10710 . 10718) (nil help-echo nil 10707 . 10710) (nil fontified nil 10707 . 10710) (nil help-echo nil 10681 . 10707) (nil fontified nil 10681 . 10707) (nil help-echo nil 10677 . 10681) (nil fontified nil 10677 . 10681) (nil help-echo nil 10674 . 10677) (nil fontified nil 10674 . 10677) (nil help-echo nil 10614 . 10674) (nil fontified nil 10614 . 10674) (nil help-echo nil 10613 . 10614) (nil fontified nil 10613 . 10614) (nil fontified nil 10591 . 10613) (nil fontified nil 10590 . 10591) (nil fontified nil 10518 . 10590) (nil fontified nil 10517 . 10518) (nil fontified nil 10516 . 10517) (nil fontified nil 10507 . 10516) (nil fontified nil 10480 . 10507) (nil help-echo nil 10473 . 10480) (nil fontified nil 10473 . 10480) (nil help-echo nil 10472 . 10473) (nil fontified nil 10472 . 10473) (nil help-echo nil 10464 . 10472) (nil fontified nil 10464 . 10472) (nil help-echo nil 10461 . 10464) (nil fontified nil 10461 . 10464) (nil help-echo nil 10434 . 10461) (nil fontified nil 10434 . 10461) (nil help-echo nil 10429 . 10434) (nil fontified nil 10429 . 10434) (nil help-echo nil 10428 . 10429) (nil fontified nil 10428 . 10429) (nil help-echo nil 10420 . 10428) (nil fontified nil 10420 . 10428) (nil help-echo nil 10417 . 10420) (nil fontified nil 10417 . 10420) (nil help-echo nil 10416 . 10417) (nil fontified nil 10416 . 10417) (nil fontified nil 10394 . 10416) (nil fontified nil 10393 . 10394) (nil fontified nil 10360 . 10393) (nil fontified nil 10337 . 10360) (nil fontified nil 10336 . 10337) (nil fontified nil 10335 . 10336) (nil fontified nil 10326 . 10335) (nil fontified nil 10301 . 10326) (nil help-echo nil 10292 . 10301) (nil fontified nil 10292 . 10301) (nil help-echo nil 10291 . 10292) (nil fontified nil 10291 . 10292) (nil help-echo nil 10283 . 10291) (nil fontified nil 10283 . 10291) (nil help-echo nil 10280 . 10283) (nil fontified nil 10280 . 10283) (nil help-echo nil 10255 . 10280) (nil fontified nil 10255 . 10280) (nil help-echo nil 10247 . 10255) (nil fontified nil 10247 . 10255) (nil help-echo nil 10246 . 10247) (nil fontified nil 10246 . 10247) (nil help-echo nil 10238 . 10246) (nil fontified nil 10238 . 10246) (nil help-echo nil 10235 . 10238) (nil fontified nil 10235 . 10238) (nil help-echo nil 10234 . 10235) (nil fontified nil 10234 . 10235) (nil fontified nil 10212 . 10234) (nil fontified nil 10211 . 10212) (nil fontified nil 10108 . 10211) (nil fontified nil 10107 . 10108) (nil fontified nil 10106 . 10107) (nil fontified nil 10097 . 10106) (nil fontified nil 10080 . 10097) (nil help-echo nil 10069 . 10080) (nil fontified nil 10069 . 10080) (nil help-echo nil 10068 . 10069) (nil fontified nil 10068 . 10069) (nil help-echo nil 10059 . 10068) (nil fontified nil 10059 . 10068) (nil help-echo nil 10056 . 10059) (nil fontified nil 10056 . 10059) (nil help-echo nil 10034 . 10056) (nil fontified nil 10034 . 10056) (nil help-echo nil 10023 . 10034) (nil fontified nil 10023 . 10034) (nil help-echo nil 10022 . 10023) (nil fontified nil 10022 . 10023) (nil help-echo nil 10013 . 10022) (nil fontified nil 10013 . 10022) (nil help-echo nil 10010 . 10013) (nil fontified nil 10010 . 10013) (nil help-echo nil 9992 . 10010) (nil fontified nil 9992 . 10010) (nil help-echo nil 9981 . 9992) (nil fontified nil 9981 . 9992) (nil help-echo nil 9980 . 9981) (nil fontified nil 9980 . 9981) (nil help-echo nil 9971 . 9980) (nil fontified nil 9971 . 9980) (nil help-echo nil 9968 . 9971) (nil fontified nil 9968 . 9971) (nil help-echo nil 9946 . 9968) (nil fontified nil 9946 . 9968) (nil help-echo nil 9935 . 9946) (nil fontified nil 9935 . 9946) (nil help-echo nil 9934 . 9935) (nil fontified nil 9934 . 9935) (nil help-echo nil 9925 . 9934) (nil fontified nil 9925 . 9934) (nil help-echo nil 9922 . 9925) (nil fontified nil 9922 . 9925) (nil help-echo nil 9905 . 9922) (nil fontified nil 9905 . 9922) (nil help-echo nil 9894 . 9905) (nil fontified nil 9894 . 9905) (nil help-echo nil 9893 . 9894) (nil fontified nil 9893 . 9894) (nil help-echo nil 9884 . 9893) (nil fontified nil 9884 . 9893) (nil help-echo nil 9881 . 9884) (nil fontified nil 9881 . 9884) (nil help-echo nil 9856 . 9881) (nil fontified nil 9856 . 9881) (nil help-echo nil 9851 . 9856) (nil fontified nil 9851 . 9856) (nil help-echo nil 9850 . 9851) (nil fontified nil 9850 . 9851) (nil help-echo nil 9841 . 9850) (nil fontified nil 9841 . 9850) (nil help-echo nil 9838 . 9841) (nil fontified nil 9838 . 9841) (nil help-echo nil 9813 . 9838) (nil fontified nil 9813 . 9838) (nil help-echo nil 9808 . 9813) (nil fontified nil 9808 . 9813) (nil help-echo nil 9807 . 9808) (nil fontified nil 9807 . 9808) (nil help-echo nil 9798 . 9807) (nil fontified nil 9798 . 9807) (nil help-echo nil 9795 . 9798) (nil fontified nil 9795 . 9798) (nil help-echo nil 9794 . 9795) (nil fontified nil 9794 . 9795) (nil fontified nil 9772 . 9794) (nil fontified nil 9771 . 9772) (nil fontified nil 9634 . 9771) (nil invisible t 9633 . 9634) (nil fontified nil 9633 . 9634) (nil fontified nil 9630 . 9633) (nil invisible t 9629 . 9630) (nil fontified nil 9629 . 9630) (nil fontified nil 9558 . 9629) (nil fontified nil 9557 . 9558) (nil fontified nil 9556 . 9557) (nil fontified nil 9547 . 9556) (nil fontified nil 9532 . 9547) (nil help-echo nil 9513 . 9532) (nil fontified nil 9513 . 9532) (nil help-echo nil 9503 . 9513) (nil fontified nil 9503 . 9513) (nil help-echo nil 9486 . 9503) (nil fontified nil 9486 . 9503) (nil help-echo nil 9466 . 9486) (nil fontified nil 9466 . 9486) (nil help-echo nil 9465 . 9466) (nil fontified nil 9465 . 9466) (nil fontified nil 9443 . 9465) (nil fontified nil 9442 . 9443) (nil fontified nil 9320 . 9442) (nil fontified nil 9319 . 9320) (nil fontified nil 9318 . 9319) (nil fontified nil 9309 . 9318) (nil fontified nil 9307 . 9309) (nil help-echo nil 9300 . 9307) (nil fontified nil 9300 . 9307) (nil help-echo nil 9299 . 9300) (nil fontified nil 9299 . 9300) (nil help-echo nil 9288 . 9299) (nil fontified nil 9288 . 9299) (nil help-echo nil 9285 . 9288) (nil fontified nil 9285 . 9288) (nil help-echo nil 9255 . 9285) (nil fontified nil 9255 . 9285) (nil help-echo nil 9248 . 9255) (nil fontified nil 9248 . 9255) (nil help-echo nil 9247 . 9248) (nil fontified nil 9247 . 9248) (nil help-echo nil 9243 . 9247) (nil fontified nil 9243 . 9247) (nil help-echo nil 9242 . 9243) (nil fontified nil 9242 . 9243) (nil help-echo nil 9231 . 9242) (nil fontified nil 9231 . 9242) (nil help-echo nil 9228 . 9231) (nil fontified nil 9228 . 9231) (nil help-echo nil 9226 . 9228) (nil fontified nil 9226 . 9228) (nil help-echo nil 9225 . 9226) (nil fontified nil 9225 . 9226) (nil help-echo nil 9224 . 9225) (nil fontified nil 9224 . 9225) (nil help-echo nil 9213 . 9224) (nil fontified nil 9213 . 9224) (nil help-echo nil 9210 . 9213) (nil fontified nil 9210 . 9213) (nil help-echo nil 9209 . 9210) (nil fontified nil 9209 . 9210) (nil fontified nil 9187 . 9209) (nil fontified nil 9186 . 9187) (nil fontified nil 9157 . 9186) (nil invisible t 9156 . 9157) (nil fontified nil 9156 . 9157) (nil fontified nil 9149 . 9156) (nil invisible t 9148 . 9149) (nil fontified nil 9148 . 9149) (nil fontified nil 9136 . 9148) (nil invisible t 9135 . 9136) (nil fontified nil 9135 . 9136) (nil fontified nil 9128 . 9135) (nil invisible t 9127 . 9128) (nil fontified nil 9127 . 9128) (nil fontified nil 9082 . 9127) (nil invisible t 9081 . 9082) (nil fontified nil 9081 . 9082) (nil fontified nil 9078 . 9081) (nil invisible t 9077 . 9078) (nil fontified nil 9077 . 9078) (nil fontified nil 9071 . 9077) (nil invisible t 9070 . 9071) (nil fontified nil 9070 . 9071) (nil fontified nil 9061 . 9070) (nil invisible t 9060 . 9061) (nil fontified nil 9060 . 9061) (nil fontified nil 9058 . 9060) (nil invisible t 9057 . 9058) (nil fontified nil 9057 . 9058) (nil fontified nil 9051 . 9057) (nil invisible t 9050 . 9051) (nil fontified nil 9050 . 9051) (nil fontified nil 9048 . 9050) (nil invisible t 9047 . 9048) (nil fontified nil 9047 . 9048) (nil fontified nil 9043 . 9047) (nil invisible t 9042 . 9043) (nil fontified nil 9042 . 9043) (nil fontified nil 9040 . 9042) (nil invisible t 9039 . 9040) (nil fontified nil 9039 . 9040) (nil fontified nil 9033 . 9039) (nil invisible t 9032 . 9033) (nil fontified nil 9032 . 9033) (nil fontified nil 8871 . 9032) (8871 . 12157)) nil (25468 7006 853137 0) 0 nil])
([nil nil ((12157 . 12158)) nil (25468 7006 853018 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14174 . 14175) (nil fontified nil 14174 . 14175) (nil fontified nil 14165 . 14174) (nil fontified nil 14146 . 14165) (nil fontified nil 14119 . 14146) (nil help-echo nil 14115 . 14119) (nil fontified nil 14115 . 14119) (nil help-echo nil 14113 . 14115) (nil fontified nil 14113 . 14115) (nil help-echo nil 14112 . 14113) (nil fontified nil 14112 . 14113) (nil fontified nil 14090 . 14112) (nil fontified nil 14089 . 14090) (nil fontified nil 14069 . 14089) (nil fontified nil 14068 . 14069) (nil fontified nil 14067 . 14068) (nil fontified nil 14058 . 14067) (nil fontified nil 14014 . 14058) (nil help-echo nil 14010 . 14014) (nil fontified nil 14010 . 14014) (nil help-echo nil 14007 . 14010) (nil fontified nil 14007 . 14010) (nil help-echo nil 14006 . 14007) (nil fontified nil 14006 . 14007) (nil help-echo nil 14002 . 14006) (nil fontified nil 14002 . 14006) (nil help-echo nil 13951 . 14002) (nil fontified nil 13951 . 14002) (nil help-echo nil 13936 . 13951) (nil fontified nil 13936 . 13951) (nil help-echo nil 13933 . 13936) (nil fontified nil 13933 . 13936) (nil help-echo nil 13905 . 13933) (nil fontified nil 13905 . 13933) (nil help-echo nil 13883 . 13905) (nil fontified nil 13883 . 13905) (nil help-echo nil 13870 . 13883) (nil fontified nil 13870 . 13883) (nil help-echo nil 13864 . 13870) (nil fontified nil 13864 . 13870) (nil help-echo nil 13863 . 13864) (nil fontified nil 13863 . 13864) (nil help-echo nil 13861 . 13863) (nil fontified nil 13861 . 13863) (nil help-echo nil 13856 . 13861) (nil fontified nil 13856 . 13861) (nil help-echo nil 13855 . 13856) (nil fontified nil 13855 . 13856) (nil help-echo nil 13795 . 13855) (nil fontified nil 13795 . 13855) (nil help-echo nil 13791 . 13795) (nil fontified nil 13791 . 13795) (nil help-echo nil 13787 . 13791) (nil fontified nil 13787 . 13791) (nil help-echo nil 13775 . 13787) (nil fontified nil 13775 . 13787) (nil help-echo nil 13774 . 13775) (nil fontified nil 13774 . 13775) (nil help-echo nil 13769 . 13774) (nil fontified nil 13769 . 13774) (nil help-echo nil 13766 . 13769) (nil fontified nil 13766 . 13769) (nil help-echo nil 13765 . 13766) (nil fontified nil 13765 . 13766) (nil fontified nil 13743 . 13765) (nil fontified nil 13742 . 13743) (nil fontified nil 13638 . 13742) (nil fontified nil 13637 . 13638) (nil fontified nil 13636 . 13637) (nil fontified nil 13627 . 13636) (nil fontified nil 13608 . 13627) (nil help-echo nil 13604 . 13608) (nil fontified nil 13604 . 13608) (nil help-echo nil 13601 . 13604) (nil fontified nil 13601 . 13604) (nil help-echo nil 13560 . 13601) (nil fontified nil 13560 . 13601) (nil help-echo nil 13559 . 13560) (nil fontified nil 13559 . 13560) (nil fontified nil 13537 . 13559) (nil fontified nil 13536 . 13537) (nil fontified nil 13528 . 13536) (nil invisible t 13527 . 13528) (nil fontified nil 13527 . 13528) (nil fontified nil 13514 . 13527) (nil invisible t 13513 . 13514) (nil fontified nil 13513 . 13514) (nil fontified nil 13503 . 13513) (nil fontified nil 13438 . 13503) (nil fontified nil 13437 . 13438) (nil fontified nil 13436 . 13437) (nil fontified nil 13427 . 13436) (nil help-echo nil 13364 . 13427) (nil fontified nil 13364 . 13427) (nil help-echo nil 13361 . 13364) (nil fontified nil 13361 . 13364) (nil help-echo nil 13359 . 13361) (nil fontified nil 13359 . 13361) (nil help-echo nil 13305 . 13359) (nil fontified nil 13305 . 13359) (nil help-echo nil 13302 . 13305) (nil fontified nil 13302 . 13305) (nil help-echo nil 13300 . 13302) (nil fontified nil 13300 . 13302) (nil help-echo nil 13242 . 13300) (nil fontified nil 13242 . 13300) (nil help-echo nil 13239 . 13242) (nil fontified nil 13239 . 13242) (nil help-echo nil 13237 . 13239) (nil fontified nil 13237 . 13239) (nil help-echo nil 13236 . 13237) (nil fontified nil 13236 . 13237) (nil help-echo nil 13235 . 13236) (nil fontified nil 13235 . 13236) (nil help-echo nil 13203 . 13235) (nil fontified nil 13203 . 13235) (nil help-echo nil 13202 . 13203) (nil fontified nil 13202 . 13203) (nil help-echo nil 13195 . 13202) (nil fontified nil 13195 . 13202) (nil help-echo nil 13191 . 13195) (nil fontified nil 13191 . 13195) (nil help-echo nil 13165 . 13191) (nil fontified nil 13165 . 13191) (nil help-echo nil 13160 . 13165) (nil fontified nil 13160 . 13165) (nil help-echo nil 13157 . 13160) (nil fontified nil 13157 . 13160) (nil help-echo nil 13151 . 13157) (nil fontified nil 13151 . 13157) (nil help-echo nil 13147 . 13151) (nil fontified nil 13147 . 13151) (nil help-echo nil 13146 . 13147) (nil fontified nil 13146 . 13147) (nil help-echo nil 13139 . 13146) (nil fontified nil 13139 . 13146) (nil help-echo nil 13138 . 13139) (nil fontified nil 13138 . 13139) (nil help-echo nil 13127 . 13138) (nil fontified nil 13127 . 13138) (nil help-echo nil 13124 . 13127) (nil fontified nil 13124 . 13127) (nil help-echo nil 13123 . 13124) (nil fontified nil 13123 . 13124) (nil fontified nil 13101 . 13123) (nil fontified nil 13100 . 13101) (nil fontified nil 12864 . 13100) (nil fontified nil 12863 . 12864) (nil fontified nil 12862 . 12863) (nil fontified nil 12853 . 12862) (nil fontified nil 12834 . 12853) (nil help-echo nil 12822 . 12834) (nil fontified nil 12822 . 12834) (nil help-echo nil 12819 . 12822) (nil fontified nil 12819 . 12822) (nil help-echo nil 12781 . 12819) (nil fontified nil 12781 . 12819) (nil help-echo nil 12754 . 12781) (nil fontified nil 12754 . 12781) (nil help-echo nil 12750 . 12754) (nil fontified nil 12750 . 12754) (nil help-echo nil 12747 . 12750) (nil fontified nil 12747 . 12750) (nil help-echo nil 12746 . 12747) (nil fontified nil 12746 . 12747) (nil fontified nil 12724 . 12746) (nil fontified nil 12723 . 12724) (nil fontified nil 12479 . 12723) (nil fontified nil 12478 . 12479) (nil fontified nil 12477 . 12478) (nil fontified nil 12468 . 12477) (nil fontified nil 12466 . 12468) (nil help-echo nil 12462 . 12466) (nil fontified nil 12462 . 12466) (nil help-echo nil 12438 . 12462) (nil fontified nil 12438 . 12462) (nil help-echo nil 12434 . 12438) (nil fontified nil 12434 . 12438) (nil help-echo nil 12431 . 12434) (nil fontified nil 12431 . 12434) (nil help-echo nil 12430 . 12431) (nil fontified nil 12430 . 12431) (nil fontified nil 12408 . 12430) (nil fontified nil 12407 . 12408) (nil fontified nil 12336 . 12407) (nil invisible t 12335 . 12336) (nil fontified nil 12335 . 12336) (nil fontified nil 12324 . 12335) (nil invisible t 12323 . 12324) (nil fontified nil 12323 . 12324) (nil fontified nil 12224 . 12323) (nil invisible t 12223 . 12224) (nil fontified nil 12223 . 12224) (nil fontified nil 12217 . 12223) (nil invisible t 12216 . 12217) (nil fontified nil 12216 . 12217) (nil fontified nil 12159 . 12216) (nil fontified nil 12158 . 12159) (12158 . 14175)) nil (25468 7006 853009 0) 0 nil])
([nil nil ((13909 . 13917)) nil (25468 7006 852955 0) 0 nil])
([nil nil ((13929 . 13936)) nil (25468 7006 852953 0) 0 nil])
([nil nil ((#("/readme" 0 7 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . -13936) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7)) nil (25468 7006 852947 0) 0 nil])
([nil nil ((#("* Package Management
  Set up ELPA, MELPA, and Org package repositories and load use-package to manage package configuration.

  NOTE: I'm keeping this section in but disabling tangling for now because I'm trying out straight.el as an alternative.

  #+begin_src emacs-lisp
    ;; This must come before configurations of installed packages.
    (setq load-prefer-new t)

    ;; Initialize package sources
    (require 'package)

    (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
			     (\"melpa-stable\" . \"https://stable.melpa.org/packages/\")
			     (\"org\" . \"https://orgmode.org/elpa/\")
			     (\"gnu\" . \"https://elpa.gnu.org/packages/\")))

    (package-initialize)
    (unless package-archive-contents
      (package-refresh-contents))

    (unless (package-installed-p 'use-package)
      (package-install 'use-package))
    (require 'use-package)
    (setq use-package-always-ensure t)

    ;; Uncomment this to get a reading on packages that get loaded at startup
    (setq use-package-verbose t)
  #+end_src
" 0 1 (fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 1 2 (fontified t keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 2 21 (fontified t face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 21 126 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 126 127 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 127 248 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 248 249 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 249 273 (fontified t font-lock-fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 273 274 (fontified t font-lock-fontified t help-echo nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 274 278 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 278 281 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 281 341 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 341 346 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 346 350 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 350 370 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 370 371 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block)) 371 375 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 375 378 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 378 405 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 405 410 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 410 417 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 417 419 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 419 426 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block)) 426 428 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 428 429 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block)) 429 434 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 434 438 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 438 450 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 450 459 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 459 466 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 466 469 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 469 470 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 470 496 (fontified t help-echo nil htmlize-link (:uri "https://melpa.org/packages/") font-lock-fontified t src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)) 496 497 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo nil htmlize-link (:uri "https://melpa.org/packages/") font-lock-fontified t src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face (font-lock-string-face org-block)) 497 498 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 498 500 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 500 509 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 509 523 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 523 526 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 526 527 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 527 560 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://stable.melpa.org/packages/") font-lock-multiline t face (font-lock-string-face org-block)) 560 561 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://stable.melpa.org/packages/") font-lock-multiline t face (font-lock-string-face org-block)) 561 562 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 562 564 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 564 573 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 573 578 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 578 581 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 581 582 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 582 606 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://orgmode.org/elpa/") font-lock-multiline t face (font-lock-string-face org-block)) 606 607 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://orgmode.org/elpa/") font-lock-multiline t face (font-lock-string-face org-block)) 607 608 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 608 610 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 610 619 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 619 624 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 624 627 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 627 628 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 628 657 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://elpa.gnu.org/packages/") font-lock-multiline t face (font-lock-string-face org-block)) 657 658 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://elpa.gnu.org/packages/") font-lock-multiline t face (font-lock-string-face org-block)) 658 659 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 659 663 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) font-lock-multiline t face (org-block)) 663 664 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block)) 664 689 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 689 694 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 694 700 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 700 726 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 726 760 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-multiline t face (org-block)) 760 761 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block)) 761 766 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 766 772 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 772 808 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 808 846 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-multiline t face (org-block)) 846 851 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 851 858 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 858 860 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 860 871 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block)) 871 873 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 873 878 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 878 882 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 882 912 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 912 913 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block)) 913 917 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 917 920 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 920 991 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 991 996 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 996 1000 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 1000 1024 (fontified t font-lock-fontified t src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-multiline t face (org-block)) 1024 1035 (fontified t font-lock-fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) font-lock-multiline t face org-block-end-line) 1035 1036 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) face org-block-end-line)) . -14186) (undo-tree-id153 . -1036) (undo-tree-id154 . -1036) (undo-tree-id155 . -1036) 15210 (t 25468 7006 863573 180000)) nil (25468 7126 700464 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) fontified t rear-nonsticky t face org-block-end-line)) . -14182) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("
" 0 1 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)))) . -14183) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 14184) nil (25468 7126 700453 0) 0 nil])
([nil nil ((#("* Keep Folders Clean
We use the no-litering package to keep folders where we edit files and the Emacs configuration folder clean! It knows about a wide variety of variables for built in Emacs features as well as those from community packages so it can be much easier than finding and setting these variables yourself.
#+begin_src emacs-lisp
  (use-package no-littering)
  (setq auto-save-file-name-transforms
	`((\".*\" ,(no-littering-expand-var-file-name \"auto-save/\") t)))

  (add-to-list 'load-path \"~/.emacs.d/resources/\")

  (setq package-enable-at-startup nil)
  (setq custom-file \"~/.emacs.d/config/custom-settings.el\")
  (load custom-file t)
#+END_SRC
" 0 1 (fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 1 2 (fontified t keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 2 21 (fontified t face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 21 318 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 318 340 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 340 341 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 341 344 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 344 355 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 355 356 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 356 368 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 368 370 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 370 373 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 373 377 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 377 409 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 409 413 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 413 417 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 417 454 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 454 466 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 466 473 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 473 474 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 474 500 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 500 523 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 523 525 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 525 526 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 526 529 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 529 533 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 533 565 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 565 568 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 568 572 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 572 585 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 585 623 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 623 625 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 625 648 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 648 657 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 657 658 (fontified t face org-block-end-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -14185) (undo-tree-id31 . -658) (undo-tree-id32 . -658) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (undo-tree-id38 . -12) (undo-tree-id39 . -12) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . -12) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -658) (undo-tree-id59 . -21) (undo-tree-id60 . -21) (undo-tree-id61 . -21) (undo-tree-id62 . -21) (undo-tree-id63 . -21) (undo-tree-id64 . -21) (undo-tree-id65 . -21) (undo-tree-id66 . -21) (undo-tree-id67 . -21) (undo-tree-id68 . -21) (undo-tree-id69 . -21) (undo-tree-id70 . -318) (undo-tree-id71 . -21) (undo-tree-id72 . -318) (undo-tree-id73 . -318) (undo-tree-id74 . -318) (undo-tree-id75 . -318) (undo-tree-id76 . -318) (undo-tree-id77 . -341) (undo-tree-id78 . -318) (undo-tree-id79 . -341) (undo-tree-id80 . -341) (undo-tree-id81 . -341) (undo-tree-id82 . -341) (undo-tree-id83 . -341) (undo-tree-id84 . -473) (undo-tree-id85 . -341) (undo-tree-id86 . -473) (undo-tree-id87 . -473) (undo-tree-id88 . -473) (undo-tree-id89 . -473) (undo-tree-id90 . -473) (undo-tree-id91 . -525) (undo-tree-id92 . -473) (undo-tree-id93 . -525) (undo-tree-id94 . -525) (undo-tree-id95 . -525) (undo-tree-id96 . -525) (undo-tree-id97 . -525) (undo-tree-id98 . -648) (undo-tree-id99 . -525) (undo-tree-id100 . -648) (undo-tree-id101 . -648) (undo-tree-id102 . -648) (undo-tree-id103 . -648) (undo-tree-id104 . -648) (undo-tree-id105 . -658) (undo-tree-id106 . -648) (undo-tree-id107 . -658) (undo-tree-id108 . -658) (undo-tree-id109 . -658) (undo-tree-id110 . -658) (undo-tree-id111 . -658) 14833) nil (25468 7126 700382 0) 0 nil])
([nil nil ((#("
** exec-path-from-shell
#+begin_src emacs-lisp
  (use-package exec-path-from-shell)
  (when (memq window-system '(mac ns x))
    (exec-path-from-shell-initialize))
#+end_src
" 0 1 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg delete) 1 2 (fontified t face org-hide keymap (keymap) line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 2 3 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 3 4 (fontified t keymap (keymap) face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 4 25 (fontified t face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 25 47 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 47 48 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 48 51 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 51 62 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 62 63 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 63 83 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 83 85 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 85 88 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 88 92 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 92 126 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent))) 126 165 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent))) 165 174 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 174 175 (fontified t face org-block-end-line line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)))) . -14185) (undo-tree-id12 . 151) (undo-tree-id13 . -175) (undo-tree-id14 . -175) (undo-tree-id15 . -175) (undo-tree-id16 . -175) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -175) (undo-tree-id26 . -175) (undo-tree-id27 . -175) (undo-tree-id28 . -175) (undo-tree-id29 . -175) (undo-tree-id30 . -175) 14361) nil (25468 7126 700254 0) 0 nil])
([nil nil ((#("
* Default Encoding
  Make emacs UTF-8 compatible for both display and editing.
#+BEGIN_SRC emacs-lisp
  ;; (set-default-coding-systems 'utf-8)
  (setq locale-coding-system 'utf-8)
  (set-terminal-coding-system 'utf-8-unix)
  (set-keyboard-coding-system 'utf-8)
  (set-selection-coding-system 'utf-8)
  (prefer-coding-system 'utf-8)
#+END_SRC
" 0 1 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 1 2 (fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 2 3 (fontified t keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 3 20 (fontified t face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 20 80 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 80 102 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 102 103 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 103 105 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 105 108 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 108 144 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 144 147 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 147 151 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 151 181 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 181 224 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 224 262 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 262 301 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 301 333 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 333 342 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 342 343 (fontified t face org-block-end-line line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -14185) (undo-tree-id379 . -343) (undo-tree-id380 . -343) (undo-tree-id381 . -343) 14518 (t 25468 7126 716821 693000)) nil (25468 7235 66706 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)))) . -14184) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) 14185) nil (25468 7235 66700 0) 0 nil])
([nil nil ((8870 . 8872)) nil (25468 7235 66695 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10261 . 10262) (nil fontified nil 10261 . 10262) (nil fontified nil 10260 . 10261) (nil fontified nil 10250 . 10260) (nil help-echo nil 10193 . 10250) (nil fontified nil 10193 . 10250) (nil help-echo nil 10190 . 10193) (nil fontified nil 10190 . 10193) (nil help-echo nil 10187 . 10190) (nil fontified nil 10187 . 10190) (nil help-echo nil 10130 . 10187) (nil fontified nil 10130 . 10187) (nil help-echo nil 10127 . 10130) (nil fontified nil 10127 . 10130) (nil help-echo nil 10124 . 10127) (nil fontified nil 10124 . 10127) (nil help-echo nil 10075 . 10124) (nil fontified nil 10075 . 10124) (nil help-echo nil 10067 . 10075) (nil fontified nil 10067 . 10075) (nil help-echo nil 10064 . 10067) (nil fontified nil 10064 . 10067) (nil help-echo nil 10061 . 10064) (nil fontified nil 10061 . 10064) (nil help-echo nil 10014 . 10061) (nil fontified nil 10014 . 10061) (nil help-echo nil 10009 . 10014) (nil fontified nil 10009 . 10014) (nil help-echo nil 10006 . 10009) (nil fontified nil 10006 . 10009) (nil help-echo nil 9971 . 10006) (nil fontified nil 9971 . 10006) (nil help-echo nil 9968 . 9971) (nil fontified nil 9968 . 9971) (nil help-echo nil 9966 . 9968) (nil fontified nil 9966 . 9968) (nil help-echo nil 9965 . 9966) (nil fontified nil 9965 . 9966) (nil fontified nil 9943 . 9965) (nil fontified nil 9920 . 9943) (nil fontified nil 9907 . 9920) (nil keymap (keymap) 9906 . 9907) (nil fontified nil 9906 . 9907) (nil keymap (keymap) 9905 . 9906) (nil fontified nil 9905 . 9906) (nil keymap (keymap) 9904 . 9905) (nil fontified nil 9904 . 9905) (nil fontified nil 9903 . 9904) (nil fontified nil 9902 . 9903) (nil fontified nil 9893 . 9902) (nil fontified nil 9867 . 9893) (nil help-echo nil 9860 . 9867) (nil fontified nil 9860 . 9867) (nil help-echo nil 9837 . 9860) (nil fontified nil 9837 . 9860) (nil help-echo nil 9836 . 9837) (nil fontified nil 9836 . 9837) (nil fontified nil 9814 . 9836) (nil fontified nil 9796 . 9814) (nil keymap (keymap) 9795 . 9796) (nil fontified nil 9795 . 9796) (nil keymap (keymap) 9794 . 9795) (nil fontified nil 9794 . 9795) (nil keymap (keymap) 9793 . 9794) (nil fontified nil 9793 . 9794) (nil fontified nil 9792 . 9793) (nil fontified nil 9791 . 9792) (nil fontified nil 9782 . 9791) (nil fontified nil 9754 . 9782) (nil help-echo nil 9750 . 9754) (nil fontified nil 9750 . 9754) (nil help-echo nil 9745 . 9750) (nil fontified nil 9745 . 9750) (nil help-echo nil 9744 . 9745) (nil fontified nil 9744 . 9745) (nil help-echo nil 9737 . 9744) (nil fontified nil 9737 . 9744) (nil help-echo nil 9733 . 9737) (nil fontified nil 9733 . 9737) (nil help-echo nil 9732 . 9733) (nil fontified nil 9732 . 9733) (nil help-echo nil 9717 . 9732) (nil fontified nil 9717 . 9732) (nil help-echo nil 9708 . 9717) (nil fontified nil 9708 . 9717) (nil help-echo nil 9704 . 9708) (nil fontified nil 9704 . 9708) (nil help-echo nil 9686 . 9704) (nil fontified nil 9686 . 9704) (nil help-echo nil 9681 . 9686) (nil fontified nil 9681 . 9686) (nil help-echo nil 9677 . 9681) (nil fontified nil 9677 . 9681) (nil help-echo nil 9676 . 9677) (nil fontified nil 9676 . 9677) (nil help-echo nil 9667 . 9676) (nil fontified nil 9667 . 9676) (nil help-echo nil 9666 . 9667) (nil fontified nil 9666 . 9667) (nil help-echo nil 9655 . 9666) (nil fontified nil 9655 . 9666) (nil help-echo nil 9652 . 9655) (nil fontified nil 9652 . 9655) (nil help-echo nil 9651 . 9652) (nil fontified nil 9651 . 9652) (nil fontified nil 9629 . 9651) (nil fontified nil 9557 . 9629) (nil fontified nil 9514 . 9557) (nil fontified nil 9485 . 9514) (nil keymap (keymap) 9484 . 9485) (nil fontified nil 9484 . 9485) (nil keymap (keymap) 9483 . 9484) (nil fontified nil 9483 . 9484) (nil keymap (keymap) 9482 . 9483) (nil fontified nil 9482 . 9483) (nil fontified nil 9481 . 9482) (nil fontified nil 9480 . 9481) (nil fontified nil 9471 . 9480) (nil fontified nil 9449 . 9471) (nil help-echo nil 9439 . 9449) (nil fontified nil 9439 . 9449) (nil help-echo nil 9416 . 9439) (nil fontified nil 9416 . 9439) (nil help-echo nil 9392 . 9416) (nil fontified nil 9392 . 9416) (nil help-echo nil 9384 . 9392) (nil fontified nil 9384 . 9392) (nil help-echo nil 9361 . 9384) (nil fontified nil 9361 . 9384) (nil help-echo nil 9333 . 9361) (nil fontified nil 9333 . 9361) (nil help-echo nil 9329 . 9333) (nil fontified nil 9329 . 9333) (nil help-echo nil 9326 . 9329) (nil fontified nil 9326 . 9329) (nil help-echo nil 9325 . 9326) (nil fontified nil 9325 . 9326) (nil help-echo nil 9298 . 9325) (nil fontified nil 9298 . 9325) (nil help-echo nil 9288 . 9298) (nil fontified nil 9288 . 9298) (nil help-echo nil 9265 . 9288) (nil fontified nil 9265 . 9288) (nil help-echo nil 9244 . 9265) (nil fontified nil 9244 . 9265) (nil help-echo nil 9233 . 9244) (nil fontified nil 9233 . 9244) (nil help-echo nil 9210 . 9233) (nil fontified nil 9210 . 9233) (nil help-echo nil 9209 . 9210) (nil fontified nil 9209 . 9210) (nil fontified nil 9187 . 9209) (nil fontified nil 9145 . 9187) (nil fontified nil 9132 . 9145) (nil keymap (keymap) 9131 . 9132) (nil fontified nil 9131 . 9132) (nil keymap (keymap) 9130 . 9131) (nil fontified nil 9130 . 9131) (nil keymap (keymap) 9129 . 9130) (nil fontified nil 9129 . 9130) (nil fontified nil 9128 . 9129) (nil fontified nil 9127 . 9128) (nil fontified nil 9118 . 9127) (nil fontified nil 9088 . 9118) (nil help-echo nil 9084 . 9088) (nil fontified nil 9084 . 9088) (nil help-echo nil 9081 . 9084) (nil fontified nil 9081 . 9084) (nil help-echo nil 9053 . 9081) (nil fontified nil 9053 . 9081) (nil help-echo nil 9049 . 9053) (nil fontified nil 9049 . 9053) (nil help-echo nil 9046 . 9049) (nil fontified nil 9046 . 9049) (nil help-echo nil 9045 . 9046) (nil fontified nil 9045 . 9046) (nil fontified nil 9023 . 9045) (nil fontified nil 9000 . 9023) (nil fontified nil 8982 . 9000) (nil keymap (keymap) 8981 . 8982) (nil fontified nil 8981 . 8982) (nil keymap (keymap) 8980 . 8981) (nil fontified nil 8980 . 8981) (nil keymap (keymap) 8979 . 8980) (nil fontified nil 8979 . 8980) (nil fontified nil 8978 . 8979) (nil fontified nil 8977 . 8978) (nil fontified nil 8968 . 8977) (nil fontified nil 8943 . 8968) (nil help-echo nil 8933 . 8943) (nil fontified nil 8933 . 8943) (nil help-echo nil 8910 . 8933) (nil fontified nil 8910 . 8933) (nil help-echo nil 8909 . 8910) (nil fontified nil 8909 . 8910) (nil fontified nil 8898 . 8909) (nil fontified nil 8887 . 8898) (nil fontified nil 8871 . 8887) (8871 . 10262)) nil (25468 7235 66686 0) 0 nil])
([nil nil ((#("
** Text Scaling
Text scaling bindings.
#+BEGIN_SRC emacs-lisp
  ;; (define-key global-map (kbd \"C-)\")
   ;;   '(lambda () (interactive) (text-scale-set 0)))
   ;; (define-key global-map (kbd \"C-+\") 'text-scale-increase)
   ;; (define-key global-map (kbd \"C-=\") 'text-scale-increase)
   ;; (define-key global-map (kbd \"C--\") 'text-scale-decrease)
 #+END_SRC
" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t) 1 2 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t face org-hide keymap (keymap)) 2 3 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 3 4 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t keymap (keymap) face org-level-2) 4 17 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t face org-level-2) 17 40 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t) 40 62 (font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face org-block-begin-line) 62 63 (font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 63 65 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (org-block) help-echo nil) 65 68 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 68 103 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 103 106 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (org-block) help-echo nil) 106 111 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 111 158 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 158 161 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (org-block) help-echo nil) 161 164 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 164 172 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 172 221 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 221 224 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (org-block) help-echo nil) 224 227 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 227 284 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 284 287 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (org-block) help-echo nil) 287 290 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil) 290 347 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil) 347 357 (font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) ws-butler-chg chg fontified t font-lock-multiline t face org-block-end-line) 357 358 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) ws-butler-chg chg fontified t face org-block-end-line)) . -9903) (undo-tree-id373 . -358) (undo-tree-id374 . -358) (undo-tree-id375 . -358) 10250) nil (25468 7235 66633 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t face org-block-end-line)) . -9902) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 9903) nil (25468 7235 66627 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg delete fontified t rear-nonsticky t face org-block-end-line)) . -9902) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 9903) nil (25468 7235 66621 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) ws-butler-chg delete fontified t)) . 9793) (#("*" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) ws-butler-chg delete fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1)) . 9793) (#("*" 0 1 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t face org-hide keymap (keymap))) . 9793)) nil (25468 7235 66616 0) 0 nil])
([nil nil ((9836 . 9840)) nil (25468 7235 66614 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -9839) (undo-tree-id367 . -1) 9840) nil (25468 7235 66612 0) 0 nil])
([nil nil ((#("** Keybinding panel (which-key)
" 0 1 (ws-butler-chg chg fontified t face org-hide keymap (keymap)) 1 2 (ws-butler-chg chg fontified t keymap (keymap) face org-level-2) 2 3 (ws-butler-chg chg fontified t keymap (keymap) face org-level-2) 3 32 (ws-butler-chg chg fontified t face org-level-2)) . 9482) (undo-tree-id366 . -32)) nil (25468 7235 66609 0) 0 nil])
([nil nil ((9620 . 9622) (#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (org-block))) . 9620) (9645 . 9647) (#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (org-block))) . 9645) (9672 . 9674) (#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (org-block))) . 9672) (9701 . 9703) (#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (org-block))) . 9701) (9713 . 9715) (#(" " 0 1 (font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) ws-butler-chg chg fontified t help-echo nil font-lock-multiline t face (org-block))) . 9713) 9620) nil (25468 7235 66605 0) 0 nil])
([nil nil ((#("** Mac movement
" 0 1 (ws-butler-chg chg fontified t face org-hide keymap (keymap)) 1 2 (ws-butler-chg chg fontified t keymap (keymap) face org-level-2) 2 3 (ws-butler-chg chg fontified t keymap (keymap) face org-level-2) 3 16 (ws-butler-chg chg fontified t face org-level-2)) . 9129) (undo-tree-id343 . -16) (undo-tree-id344 . -15) (undo-tree-id345 . -15) (undo-tree-id346 . -15) (undo-tree-id347 . -15) (undo-tree-id348 . -15) (undo-tree-id349 . -15) (undo-tree-id350 . -15) (undo-tree-id351 . -15) (undo-tree-id352 . -15) (undo-tree-id353 . -15) (undo-tree-id354 . -15) (undo-tree-id355 . -15) (undo-tree-id356 . -15) (undo-tree-id357 . -15) (undo-tree-id358 . -15) (undo-tree-id359 . -15) (undo-tree-id360 . -15) (undo-tree-id361 . -15) (undo-tree-id362 . -15) (undo-tree-id363 . -15) (undo-tree-id364 . -15) (undo-tree-id365 . -15)) nil (25468 7235 66598 0) 0 nil])
([nil nil ((#("Mac key remapping" 0 17 (ws-butler-chg chg fontified t face org-level-2)) . 8982) (undo-tree-id337 . -17) (undo-tree-id338 . -17) (undo-tree-id339 . -17) (undo-tree-id340 . -17) (undo-tree-id341 . -17) (undo-tree-id342 . -17)) nil (25468 7235 66553 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t)) . -8978) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("*" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t)) . -8979) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("*" 0 1 (line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) ws-butler-chg chg fontified t)) . -8980) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#(" " 0 1 (line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) ws-butler-chg chg fontified t keymap (keymap) face org-level-2)) . -8981) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 8982) nil (25468 7235 66530 0) 0 nil])
([nil current ((#("* Keyboard bindings
** ESC Cancels All
#+begin_src emacs-lisp
  (global-set-key (kbd \"<escape>\") 'keyboard-escape-quit)
#+end_src

** Mac key remapping
Map Meta to Option key
#+BEGIN_SRC emacs-lisp
  (setq mac-option-modifier 'meta)
  (setq mac-command-modifier 'super)
#+END_SRC

** Mac movement
Add some OSX behavior on cursor movement.
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd \"s-<right>\") 'move-end-of-line)
  (global-set-key (kbd \"s-<left>\") 'move-beginning-of-line)

  (setq scroll-error-top-bottom t)
  (global-set-key (kbd \"s-<up>\") 'scroll-down-command)
  (global-set-key (kbd \"s-<down>\") 'scroll-up-command)
#+END_SRC

** Keybinding panel (which-key)
which-key is great for getting an overview of what keybindings are available based on the prefix keys you entered.
#+BEGIN_SRC emacs-lisp
  (use-package which-key
    :init (which-key-mode)
    :diminish which-key-mode
    :config
    (setq which-key-idle-delay 0.3))
#+END_SRC

** Buffer Management
#+begin_src emacs-lisp
  (global-set-key (kbd \"C-x b\") 'counsel-switch-buffer)
#+end_src

** Text Scaling
Text scaling bindings.
#+BEGIN_SRC emacs-lisp
  ;; (define-key global-map (kbd \"C-)\")
   ;;   '(lambda () (interactive) (text-scale-set 0)))
   ;; (define-key global-map (kbd \"C-+\") 'text-scale-increase)
   ;; (define-key global-map (kbd \"C-=\") 'text-scale-increase)
   ;; (define-key global-map (kbd \"C--\") 'text-scale-decrease)
 #+END_SRC

" 0 1 (fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 1 2 (fontified t keymap (keymap) face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 2 20 (fontified t face org-level-1 line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 20 21 (fontified t face org-hide keymap (keymap) line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 21 22 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 22 23 (fontified t keymap (keymap) face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 23 39 (fontified t face org-level-2 line-prefix "" wrap-prefix #("** " 0 3 (face org-indent))) 39 50 (fontified t font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t face org-block-begin-line) 50 61 (fontified t font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t face org-block-begin-line) 61 62 (fontified t font-lock-fontified t help-echo nil line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t face org-block-begin-line) 62 85 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-multiline t face (org-block)) 85 95 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block)) 95 120 (fontified t font-lock-fontified t src-block t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-multiline t face (org-block)) 120 129 (fontified t font-lock-fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t face org-block-end-line) 129 130 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) face org-block-end-line) 130 131 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 131 132 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-hide keymap (keymap)) 132 133 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 133 134 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) keymap (keymap) face org-level-2) 134 152 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-level-2) 152 175 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 175 197 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 197 198 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 198 201 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 201 205 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 205 233 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 233 236 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 236 240 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 240 270 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 270 279 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 279 280 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) face org-block-end-line) 280 281 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 281 282 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-hide keymap (keymap)) 282 283 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 283 284 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) keymap (keymap) face org-level-2) 284 297 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-level-2) 297 339 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 339 361 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 361 362 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 362 385 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 385 396 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 396 417 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 417 440 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 440 450 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 450 477 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 477 478 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 478 481 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 481 485 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 485 513 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 513 536 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 536 544 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 544 568 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 568 591 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 591 601 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 601 623 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 623 632 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 632 633 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) face org-block-end-line) 633 634 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 634 635 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-hide keymap (keymap)) 635 636 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 636 637 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) keymap (keymap) face org-level-2) 637 666 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-level-2) 666 709 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 709 781 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 781 803 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 803 804 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 804 807 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 807 818 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 818 819 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 819 828 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 828 829 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 829 833 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 833 838 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 838 856 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 856 860 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 860 869 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 869 884 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 884 885 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 885 889 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 889 896 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 896 897 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 897 902 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 902 906 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 906 934 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("       " 0 3 (face org-indent) 3 7 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 934 943 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 943 944 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) face org-block-end-line) 944 945 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 945 946 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-hide keymap (keymap)) 946 947 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 947 948 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) keymap (keymap) face org-level-2) 948 966 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-level-2) 966 988 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 988 989 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 989 1012 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1012 1019 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1019 1045 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1045 1054 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 1054 1055 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) face org-block-end-line) 1055 1056 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 1056 1057 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-hide keymap (keymap)) 1057 1058 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 1058 1059 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) keymap (keymap) face org-level-2) 1059 1072 (fontified t line-prefix "" wrap-prefix #("** " 0 3 (face org-indent)) face org-level-2) 1072 1095 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent))) 1095 1117 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1117 1118 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 1118 1120 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1120 1123 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 1123 1158 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1158 1161 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1161 1166 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 1166 1213 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1213 1216 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1216 1219 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 1219 1227 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1227 1276 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1276 1279 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1279 1282 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 1282 1339 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1339 1342 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1342 1345 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 1345 1402 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("      " 0 3 (face org-indent) 3 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1402 1412 (fontified nil line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 1412 1413 (fontified nil line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) face org-block-end-line) 1413 1414 (fontified t line-prefix #("   " 0 3 (face org-indent)) wrap-prefix #("   " 0 3 (face org-indent)))) . -15426) (undo-tree-id382 . 343) (undo-tree-id383 . -1413) (undo-tree-id384 . -1414) (undo-tree-id385 . -1414) (undo-tree-id386 . -151) (undo-tree-id387 . -280) (undo-tree-id388 . -296) (undo-tree-id389 . -633) (undo-tree-id390 . -665) (undo-tree-id391 . -944) (undo-tree-id392 . -965) (undo-tree-id393 . -1055) (undo-tree-id394 . -39) (undo-tree-id395 . -23) (undo-tree-id396 . -20) (undo-tree-id397 . -39) (undo-tree-id398 . -39) (undo-tree-id399 . -39) (undo-tree-id400 . -39) (undo-tree-id401 . -39) (undo-tree-id402 . -39) (undo-tree-id403 . -62) (undo-tree-id404 . -39) (undo-tree-id405 . -62) (undo-tree-id406 . -62) (undo-tree-id407 . -62) (undo-tree-id408 . -62) (undo-tree-id409 . -62) (undo-tree-id410 . -120) (undo-tree-id411 . -62) (undo-tree-id412 . -120) (undo-tree-id413 . -120) (undo-tree-id414 . -120) (undo-tree-id415 . -120) (undo-tree-id416 . -120) (undo-tree-id417 . -130) (undo-tree-id418 . -120) (undo-tree-id419 . -130) (undo-tree-id420 . -130) (undo-tree-id421 . -130) (undo-tree-id422 . -130) (undo-tree-id423 . -130) (undo-tree-id424 . -281) (undo-tree-id425 . -130) (undo-tree-id426 . -281) (undo-tree-id427 . -281) (undo-tree-id428 . -281) (undo-tree-id429 . -281) (undo-tree-id430 . -281) (undo-tree-id431 . -634) (undo-tree-id432 . -281) (undo-tree-id433 . -634) (undo-tree-id434 . -634) (undo-tree-id435 . -634) (undo-tree-id436 . -634) (undo-tree-id437 . -634) (undo-tree-id438 . -945) (undo-tree-id439 . -634) (undo-tree-id440 . -945) (undo-tree-id441 . -945) (undo-tree-id442 . -945) (undo-tree-id443 . -945) (undo-tree-id444 . -945) (undo-tree-id445 . -1056) (undo-tree-id446 . -945) (undo-tree-id447 . -1056) (undo-tree-id448 . -1056) (undo-tree-id449 . -1056) (undo-tree-id450 . -1056) (undo-tree-id451 . -1056) (undo-tree-id452 . -1414) (undo-tree-id453 . -1056) (undo-tree-id454 . -1414) (undo-tree-id455 . -1414) (undo-tree-id456 . -1414) (undo-tree-id457 . -1414) (undo-tree-id458 . -1414) (undo-tree-id459 . -1414) (undo-tree-id460 . -1414) (undo-tree-id461 . -1414) (undo-tree-id462 . -1414) (undo-tree-id463 . -1414) (undo-tree-id464 . -1414) (undo-tree-id465 . -1414) (undo-tree-id466 . -1056) (undo-tree-id467 . -1414) (undo-tree-id468 . -1056) (undo-tree-id469 . -1056) (undo-tree-id470 . -1056) (undo-tree-id471 . -1056) (undo-tree-id472 . -1056) (undo-tree-id473 . -945) (undo-tree-id474 . -1056) (undo-tree-id475 . -945) (undo-tree-id476 . -945) (undo-tree-id477 . -945) (undo-tree-id478 . -945) (undo-tree-id479 . -945) (undo-tree-id480 . -634) (undo-tree-id481 . -945) (undo-tree-id482 . -634) (undo-tree-id483 . -634) (undo-tree-id484 . -634) (undo-tree-id485 . -634) (undo-tree-id486 . -634) (undo-tree-id487 . -281) (undo-tree-id488 . -634) (undo-tree-id489 . -281) (undo-tree-id490 . -281) (undo-tree-id491 . -281) (undo-tree-id492 . -281) (undo-tree-id493 . -281) (undo-tree-id494 . -130) (undo-tree-id495 . -281) (undo-tree-id496 . -130) (undo-tree-id497 . -130) (undo-tree-id498 . -130) (undo-tree-id499 . -130) (undo-tree-id500 . -130) (undo-tree-id501 . -120) (undo-tree-id502 . -130) (undo-tree-id503 . -120) (undo-tree-id504 . -120) (undo-tree-id505 . -120) (undo-tree-id506 . -120) (undo-tree-id507 . -120) (undo-tree-id508 . -62) (undo-tree-id509 . -120) (undo-tree-id510 . -62) (undo-tree-id511 . -62) (undo-tree-id512 . -62) (undo-tree-id513 . -62) (undo-tree-id514 . -62) (undo-tree-id515 . -39) (undo-tree-id516 . -62) (undo-tree-id517 . -39) (undo-tree-id518 . -39) (undo-tree-id519 . -39) (undo-tree-id520 . -39) (undo-tree-id521 . -39) (undo-tree-id522 . -20) (undo-tree-id523 . -39) (undo-tree-id524 . -20) (undo-tree-id525 . -20) (undo-tree-id526 . -20) (undo-tree-id527 . -20) (undo-tree-id528 . -20) (undo-tree-id529 . -20) (undo-tree-id530 . -20) (undo-tree-id531 . -20) (undo-tree-id532 . -20) (undo-tree-id533 . -20) (undo-tree-id534 . -20) (undo-tree-id535 . -1414) (undo-tree-id536 . -20) (undo-tree-id537 . -20) (undo-tree-id538 . -20) (undo-tree-id539 . -20) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -39) (undo-tree-id543 . -20) (undo-tree-id544 . -39) (undo-tree-id545 . -39) (undo-tree-id546 . -39) (undo-tree-id547 . -39) (undo-tree-id548 . -39) (undo-tree-id549 . -62) (undo-tree-id550 . -39) (undo-tree-id551 . -62) (undo-tree-id552 . -62) (undo-tree-id553 . -62) (undo-tree-id554 . -62) (undo-tree-id555 . -62) (undo-tree-id556 . -120) (undo-tree-id557 . -62) (undo-tree-id558 . -120) (undo-tree-id559 . -120) (undo-tree-id560 . -120) (undo-tree-id561 . -120) (undo-tree-id562 . -120) (undo-tree-id563 . -130) (undo-tree-id564 . -120) (undo-tree-id565 . -130) (undo-tree-id566 . -130) (undo-tree-id567 . -130) (undo-tree-id568 . -130) (undo-tree-id569 . -130) (undo-tree-id570 . -281) (undo-tree-id571 . -130) (undo-tree-id572 . -281) (undo-tree-id573 . -281) (undo-tree-id574 . -281) (undo-tree-id575 . -281) (undo-tree-id576 . -281) (undo-tree-id577 . -634) (undo-tree-id578 . -281) (undo-tree-id579 . -634) (undo-tree-id580 . -634) (undo-tree-id581 . -634) (undo-tree-id582 . -634) (undo-tree-id583 . -634) (undo-tree-id584 . -945) (undo-tree-id585 . -634) (undo-tree-id586 . -945) (undo-tree-id587 . -945) (undo-tree-id588 . -945) (undo-tree-id589 . -945) (undo-tree-id590 . -945) (undo-tree-id591 . -1056) (undo-tree-id592 . -945) (undo-tree-id593 . -1056) (undo-tree-id594 . -1056) (undo-tree-id595 . -1056) (undo-tree-id596 . -1056) (undo-tree-id597 . -1056) (undo-tree-id598 . -1414) (undo-tree-id599 . -1056) (undo-tree-id600 . -1414) (undo-tree-id601 . -1414) (undo-tree-id602 . -1414) (undo-tree-id603 . -1414) (undo-tree-id604 . -1414) 16482 (t 25468 7235 79217 660000)) nil (25468 7260 761331 0) 0 nil])
nil
